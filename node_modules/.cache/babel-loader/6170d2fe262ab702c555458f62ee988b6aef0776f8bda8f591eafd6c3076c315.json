{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Navbar from '@/components/header/Navbar.vue';\n\n// import axios from \"axios\";\n// import { mapActions } from \"vuex\";\n\nexport default {\n  name: 'DeleteAllCategories',\n  components: {\n    Navbar\n  },\n  /* data() {\n      return {\n          locId: this.$route.params.locationId,\n          userId: '',\n          locName: \"\",\n          locAddress: \"\",\n          allItemsIdIs: [],\n          allCatsIdIs: [],\n          successMessage: '',\n          errorMessage: '',\n      }\n  }, */\n\n  /* async mounted() {\n      let user = localStorage.getItem('user-info');\n      if (!user) {\n          this.redirectTo({ val: 'sign-up' });\n      } else {\n           this.userId = JSON.parse(user).id;\n           this.getLocationInfo(this.userId, this.locId);\n           // All Items in This Location (KFC Restaurant)\n          // http://localhost:3000/items?locId=3\n          let result = await axios.get(`http://localhost:3000/items?locId=${this.locId}`);\n          let resultLength = result.data.length;\n          for (var i = 0; i < resultLength; i++) {\n              this.allItemsIdIs.push(result.data[i].id);\n          }\n           // All Categories in This Location (KFC Restaurant)\n          // http://localhost:3000/categories?locationId=3\n          // write locId or locationId depend on db.json file (database)\n          let resultCat = await axios.get(`http://localhost:3000/categories?locationId=${this.locId}`);\n          let resultCatLength = resultCat.data.length;\n          for (var i = 0; i < resultCatLength; i++) {\n              this.allCatsIdIs.push(resultCat.data[i].id);\n          }\n       }\n  }, */\n\n  methods: {\n    ...mapActions(['redirectTo']),\n    goBack() {\n      this.$router.push({\n        name: \"view-categories\",\n        params: {\n          locationId: this.locId\n        }\n      });\n    },\n    async getLocationInfo(userId, locId) {\n      let result = await axios.get(`http://localhost:3000/locations?userId=${userId}&id=${locId}`);\n      let locDetails = [];\n      if (result.status == 200) {\n        locDetails = result.data;\n        this.locName = locDetails[0].name;\n        this.locAddress = locDetails[0].address;\n      }\n    },\n    async deleteAllCategories() {\n      let allCatsResults = [];\n      for (var i = 0; i < this.allCatsIdIs.length; i++) {\n        let result = await axios.delete(`http://localhost:3000/categories/${this.allCatsIdIs[i]}`);\n        if (result.status == 200) {\n          allCatsResults.push(true);\n        } else {\n          allCatsResults.push(false);\n        }\n      }\n      let allItemsResults = [];\n      for (var i = 0; i < this.allItemsIdIs.length; i++) {\n        let result = await axios.delete(`http://localhost:3000/items/${this.allItemsIdIs[i]}`);\n        if (result.status == 200) {\n          allItemsResults.push(true);\n        } else {\n          allItemsResults.push(false);\n        }\n      }\n      if (!allCatsResults.includes(false) && !allItemsResults.includes(false)) {\n        this.successMessage = 'Category and Related Items are all deleted Successfully';\n        this.errorMessage = '';\n        setTimeout(() => {\n          this.$router.push({\n            name: \"home\"\n          });\n        }, 2000);\n      } else {\n        this.successMessage = '';\n        this.errorMessage = 'Something went wrong, Try again';\n      }\n    }\n  }\n};","map":{"version":3,"names":["Navbar","name","components","methods","mapActions","goBack","$router","push","params","locationId","locId","getLocationInfo","userId","result","axios","get","locDetails","status","data","locName","locAddress","address","deleteAllCategories","allCatsResults","i","allCatsIdIs","length","delete","allItemsResults","allItemsIdIs","includes","successMessage","errorMessage","setTimeout"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/DeleteAllCategories.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <!-- ------------------------- -->\n\n        <!-- <form @click.prevent>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto text-center\">\n                    <h1>Delete All Categories</h1>\n                    <hr>\n                    <p class=\"text-danger\">\n                        Are you sure you want to delete all categories for this location?\n                    </p>\n                    <div class=\"text-center\">\n                        <h1 class=\"mb\">{{ locName }}</h1>\n                        <p class=\"text-muted\">{{ locAddress }}</p>\n                    </div>\n                    <p class=\"text-danger\">\n                        When deleting all categories, Their related menu items will be deleted as well ....\n                    </p>\n                    <hr>\n                </div>\n            </div>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <button class=\"btn btn-info text-white\" @click=\"goBack()\">Go Back</button>\n                    &nbsp;&nbsp;&nbsp;\n                    <button class=\"btn btn-danger text-white\" @click=\"deleteAllCategories()\">Delete All Now</button>\n                </div>\n            </div>\n\n            <br />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length > 0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-warning\" v-if=\"errorMessage.length > 0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n\n        </form> -->\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\n// import axios from \"axios\";\n// import { mapActions } from \"vuex\";\n\nexport default {\n\n    name: 'DeleteAllCategories',\n\n    components: {\n        Navbar,\n    },\n\n    /* data() {\n        return {\n            locId: this.$route.params.locationId,\n            userId: '',\n            locName: \"\",\n            locAddress: \"\",\n            allItemsIdIs: [],\n            allCatsIdIs: [],\n            successMessage: '',\n            errorMessage: '',\n        }\n    }, */\n\n    /* async mounted() {\n        let user = localStorage.getItem('user-info');\n        if (!user) {\n            this.redirectTo({ val: 'sign-up' });\n        } else {\n\n            this.userId = JSON.parse(user).id;\n\n            this.getLocationInfo(this.userId, this.locId);\n\n            // All Items in This Location (KFC Restaurant)\n            // http://localhost:3000/items?locId=3\n            let result = await axios.get(`http://localhost:3000/items?locId=${this.locId}`);\n            let resultLength = result.data.length;\n            for (var i = 0; i < resultLength; i++) {\n                this.allItemsIdIs.push(result.data[i].id);\n            }\n\n            // All Categories in This Location (KFC Restaurant)\n            // http://localhost:3000/categories?locationId=3\n            // write locId or locationId depend on db.json file (database)\n            let resultCat = await axios.get(`http://localhost:3000/categories?locationId=${this.locId}`);\n            let resultCatLength = resultCat.data.length;\n            for (var i = 0; i < resultCatLength; i++) {\n                this.allCatsIdIs.push(resultCat.data[i].id);\n            }\n\n        }\n    }, */\n\n    methods: {\n        \n        ...mapActions(['redirectTo']),\n\n        goBack() {\n            this.$router.push({ name: \"view-categories\", params: { locationId: this.locId } });\n        },\n\n        async getLocationInfo(userId, locId) {\n            let result = await axios.get(`http://localhost:3000/locations?userId=${userId}&id=${locId}`);\n            let locDetails = [];\n            if (result.status == 200) {\n                locDetails = result.data;\n                this.locName = locDetails[0].name;\n                this.locAddress = locDetails[0].address;\n            }\n        },\n\n        async deleteAllCategories() {\n\n            let allCatsResults = [];\n            for (var i = 0; i < this.allCatsIdIs.length; i++) {\n                let result = await axios.delete(`http://localhost:3000/categories/${this.allCatsIdIs[i]}`);\n                if (result.status == 200) {\n                    allCatsResults.push(true);\n                } else {\n                    allCatsResults.push(false);\n                }\n            }\n\n            let allItemsResults = [];\n            for (var i = 0; i < this.allItemsIdIs.length; i++) {\n                let result = await axios.delete(`http://localhost:3000/items/${this.allItemsIdIs[i]}`);\n                if (result.status == 200) {\n                    allItemsResults.push(true);\n                } else {\n                    allItemsResults.push(false);\n                }\n            }\n\n            if (!allCatsResults.includes(false) && !allItemsResults.includes(false)) {\n                this.successMessage = 'Category and Related Items are all deleted Successfully';\n                this.errorMessage = '';\n                setTimeout(() => {\n                    this.$router.push({ name: \"home\" });\n                }, 2000);\n            } else {\n                this.successMessage = '';\n                this.errorMessage = 'Something went wrong, Try again';\n            }\n\n\n        },\n\n    },\n\n}\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":";AAuDA,OAAOA,MAAK,MAAO,gCAAgC;;AAEnD;AACA;;AAEA,eAAe;EAEXC,IAAI,EAAE,qBAAqB;EAE3BC,UAAU,EAAE;IACRF;EACJ,CAAC;EAED;;;;;;;;;;;;;EAaA;;;;;;;;;;;;;;;;;;;;;;;;;EA8BAG,OAAO,EAAE;IAEL,GAAGC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAE7BC,MAAMA,CAAA,EAAG;MACL,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEN,IAAI,EAAE,iBAAiB;QAAEO,MAAM,EAAE;UAAEC,UAAU,EAAE,IAAI,CAACC;QAAM;MAAE,CAAC,CAAC;IACtF,CAAC;IAED,MAAMC,eAAeA,CAACC,MAAM,EAAEF,KAAK,EAAE;MACjC,IAAIG,MAAK,GAAI,MAAMC,KAAK,CAACC,GAAG,CAAE,0CAAyCH,MAAO,OAAMF,KAAM,EAAC,CAAC;MAC5F,IAAIM,UAAS,GAAI,EAAE;MACnB,IAAIH,MAAM,CAACI,MAAK,IAAK,GAAG,EAAE;QACtBD,UAAS,GAAIH,MAAM,CAACK,IAAI;QACxB,IAAI,CAACC,OAAM,GAAIH,UAAU,CAAC,CAAC,CAAC,CAACf,IAAI;QACjC,IAAI,CAACmB,UAAS,GAAIJ,UAAU,CAAC,CAAC,CAAC,CAACK,OAAO;MAC3C;IACJ,CAAC;IAED,MAAMC,mBAAmBA,CAAA,EAAG;MAExB,IAAIC,cAAa,GAAI,EAAE;MACvB,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACC,WAAW,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;QAC9C,IAAIX,MAAK,GAAI,MAAMC,KAAK,CAACa,MAAM,CAAE,oCAAmC,IAAI,CAACF,WAAW,CAACD,CAAC,CAAE,EAAC,CAAC;QAC1F,IAAIX,MAAM,CAACI,MAAK,IAAK,GAAG,EAAE;UACtBM,cAAc,CAAChB,IAAI,CAAC,IAAI,CAAC;QAC7B,OAAO;UACHgB,cAAc,CAAChB,IAAI,CAAC,KAAK,CAAC;QAC9B;MACJ;MAEA,IAAIqB,eAAc,GAAI,EAAE;MACxB,KAAK,IAAIJ,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACK,YAAY,CAACH,MAAM,EAAEF,CAAC,EAAE,EAAE;QAC/C,IAAIX,MAAK,GAAI,MAAMC,KAAK,CAACa,MAAM,CAAE,+BAA8B,IAAI,CAACE,YAAY,CAACL,CAAC,CAAE,EAAC,CAAC;QACtF,IAAIX,MAAM,CAACI,MAAK,IAAK,GAAG,EAAE;UACtBW,eAAe,CAACrB,IAAI,CAAC,IAAI,CAAC;QAC9B,OAAO;UACHqB,eAAe,CAACrB,IAAI,CAAC,KAAK,CAAC;QAC/B;MACJ;MAEA,IAAI,CAACgB,cAAc,CAACO,QAAQ,CAAC,KAAK,KAAK,CAACF,eAAe,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAE;QACrE,IAAI,CAACC,cAAa,GAAI,yDAAyD;QAC/E,IAAI,CAACC,YAAW,GAAI,EAAE;QACtBC,UAAU,CAAC,MAAM;UACb,IAAI,CAAC3B,OAAO,CAACC,IAAI,CAAC;YAAEN,IAAI,EAAE;UAAO,CAAC,CAAC;QACvC,CAAC,EAAE,IAAI,CAAC;MACZ,OAAO;QACH,IAAI,CAAC8B,cAAa,GAAI,EAAE;QACxB,IAAI,CAACC,YAAW,GAAI,iCAAiC;MACzD;IAGJ;EAEJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}