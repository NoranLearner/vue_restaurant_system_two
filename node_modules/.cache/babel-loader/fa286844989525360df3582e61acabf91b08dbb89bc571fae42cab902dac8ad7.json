{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Navbar from '@/components/header/Navbar.vue';\n\n// import axios from \"axios\";\n// import { mapActions, mapMutations } from \"vuex\";\n\nexport default {\n  name: 'DeleteAllItems',\n  components: {\n    Navbar\n  },\n  /* data() {\n      return {\n          locId: this.$route.params.locationId,\n          itemId: this.$route.params.itemId,\n          userId: '',\n          locationData: [],\n          locName: \"\",\n          locAddress: \"\",\n          allItemsIdIs: [],\n          myResult: '',\n          successMessage: '',\n          errorMessage: '',\n      }\n  }, */\n\n  /* async mounted() {\n      let user = localStorage.getItem('user-info');\n      if (!user) {\n          this.redirectTo({ val: 'sign-up' });\n      } else {\n           this.userId = JSON.parse(user).id;\n           this.canCurrentUserAccessThisLocation();\n           // http://localhost:3000/items?userId=2&locId=3\n          let result = await axios.get(`http://localhost:3000/items?userId=${this.userId}&locId=${this.locId}`);\n          this.allResults = result.data;\n          let resultLength = this.allResults.length;\n          for (var i = 0; i < resultLength; i++) {\n              this.allItemsIdIs.push(result.data[i].id);\n          }\n          // console.table(this.allItemsIdIs);\n      }\n  }, */\n\n  methods: {\n    ...mapActions(['redirectTo']),\n    async canCurrentUserAccessThisLocation() {\n      let result = await axios.get(`\n    http://localhost:3000/locations?id=${this.locId}&userId=${this.userId}\n    `);\n      if (result.status == 200 && result.data.length > 0) {\n        this.locationData = result.data;\n        this.locName = this.locationData[0].name;\n        this.locAddress = this.locationData[0].address;\n      } else {\n        this.redirectTo({\n          val: 'home'\n        });\n      }\n    },\n    async deleteAllItems() {\n      let allResults = [];\n      for (var i = 0; i < this.allItemsIdIs.length; i++) {\n        let result = await axios.delete(`http://localhost:3000/items/${this.allItemsIdIs[i]}`);\n        if (result.status == 200) {\n          allResults.push(true);\n        } else {\n          allResults.push(false);\n        }\n      }\n      if (!allResults.includes(false)) {\n        this.successMessage = 'All Items are deleted Successfully';\n        this.errorMessage = '';\n        setTimeout(() => {\n          this.$router.push({\n            name: \"menu\",\n            params: {\n              locationId: this.locId\n            }\n          });\n        }, 2000);\n      } else {\n        this.successMessage = '';\n        this.errorMessage = 'Something went wrong, Try again';\n      }\n    }\n  }\n};","map":{"version":3,"names":["Navbar","name","components","methods","mapActions","canCurrentUserAccessThisLocation","result","axios","get","locId","userId","status","data","length","locationData","locName","locAddress","address","redirectTo","val","deleteAllItems","allResults","i","allItemsIdIs","delete","push","includes","successMessage","errorMessage","setTimeout","$router","params","locationId"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/DeleteAllItems.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <!-- <form @click.prevent>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto text-center\">\n\n                    <h5 class=\"text-danger\">\n                        Are you sure you want to delete all items for this location ?\n                    </h5>\n\n                    <div class=\"text-center\">\n                        <h1 class=\"mb-0\">{{ locName }}</h1>\n                        <p class=\"text-muted\">{{ locAddress }}</p>\n                    </div>\n\n                    <p class=\"text-danger\">\n                        When deleting this items, You will no longer see them ...\n                    </p>\n\n                </div>\n            </div>\n\n            <hr />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <router-link :to=\"{ name: 'menu', params: { locationId: locId } }\">\n                        <button type=\"button\" class=\"btn btn-secondary\">Back To Menu</button>\n                    </router-link>\n                    &nbsp;\n                    <button class=\"btn btn-danger text-white\" @click=\"deleteAllItems()\">Delete All Now</button>\n                </div>\n            </div>\n\n            <br />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length > 0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-warning\" v-if=\"errorMessage.length > 0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n\n        </form> -->\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\n// import axios from \"axios\";\n// import { mapActions, mapMutations } from \"vuex\";\n\nexport default {\n\n    name: 'DeleteAllItems',\n\n    components: {\n        Navbar,\n    },\n\n    /* data() {\n        return {\n            locId: this.$route.params.locationId,\n            itemId: this.$route.params.itemId,\n            userId: '',\n            locationData: [],\n            locName: \"\",\n            locAddress: \"\",\n            allItemsIdIs: [],\n            myResult: '',\n            successMessage: '',\n            errorMessage: '',\n        }\n    }, */\n\n    /* async mounted() {\n        let user = localStorage.getItem('user-info');\n        if (!user) {\n            this.redirectTo({ val: 'sign-up' });\n        } else {\n\n            this.userId = JSON.parse(user).id;\n\n            this.canCurrentUserAccessThisLocation();\n\n            // http://localhost:3000/items?userId=2&locId=3\n            let result = await axios.get(`http://localhost:3000/items?userId=${this.userId}&locId=${this.locId}`);\n            this.allResults = result.data;\n            let resultLength = this.allResults.length;\n            for (var i = 0; i < resultLength; i++) {\n                this.allItemsIdIs.push(result.data[i].id);\n            }\n            // console.table(this.allItemsIdIs);\n        }\n    }, */\n\n    methods: {\n\n        ...mapActions(['redirectTo']),\n\n        async canCurrentUserAccessThisLocation() {\n            let result = await axios.get(`\n    http://localhost:3000/locations?id=${this.locId}&userId=${this.userId}\n    `);\n            if (result.status == 200 && result.data.length > 0) {\n                this.locationData = result.data;\n                this.locName = this.locationData[0].name;\n                this.locAddress = this.locationData[0].address;\n            } else {\n                this.redirectTo({ val: 'home' });\n            }\n        },\n\n        async deleteAllItems() {\n\n            let allResults = [];\n\n            for (var i = 0; i < this.allItemsIdIs.length; i++) {\n                let result = await axios.delete(`http://localhost:3000/items/${this.allItemsIdIs[i]}`);\n                if (result.status == 200) {\n                    allResults.push(true);\n                } else {\n                    allResults.push(false);\n                }\n            }\n\n            if (!allResults.includes(false)) {\n                this.successMessage = 'All Items are deleted Successfully';\n                this.errorMessage = '';\n                setTimeout(() => {\n                    this.$router.push({ name: \"menu\", params: { locationId: this.locId } });\n                }, 2000);\n            } else {\n                this.successMessage = '';\n                this.errorMessage = 'Something went wrong, Try again';\n            }\n\n        },\n\n    },\n\n}\n\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":";AA0DA,OAAOA,MAAK,MAAO,gCAAgC;;AAEnD;AACA;;AAEA,eAAe;EAEXC,IAAI,EAAE,gBAAgB;EAEtBC,UAAU,EAAE;IACRF;EACJ,CAAC;EAED;;;;;;;;;;;;;;;EAeA;;;;;;;;;;;;;;;;;;EAqBAG,OAAO,EAAE;IAEL,GAAGC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAE7B,MAAMC,gCAAgCA,CAAA,EAAG;MACrC,IAAIC,MAAK,GAAI,MAAMC,KAAK,CAACC,GAAG,CAAC;yCACA,IAAI,CAACC,KAAM,WAAU,IAAI,CAACC,MAAM;KACpE,CAAC;MACM,IAAIJ,MAAM,CAACK,MAAK,IAAK,GAAE,IAAKL,MAAM,CAACM,IAAI,CAACC,MAAK,GAAI,CAAC,EAAE;QAChD,IAAI,CAACC,YAAW,GAAIR,MAAM,CAACM,IAAI;QAC/B,IAAI,CAACG,OAAM,GAAI,IAAI,CAACD,YAAY,CAAC,CAAC,CAAC,CAACb,IAAI;QACxC,IAAI,CAACe,UAAS,GAAI,IAAI,CAACF,YAAY,CAAC,CAAC,CAAC,CAACG,OAAO;MAClD,OAAO;QACH,IAAI,CAACC,UAAU,CAAC;UAAEC,GAAG,EAAE;QAAO,CAAC,CAAC;MACpC;IACJ,CAAC;IAED,MAAMC,cAAcA,CAAA,EAAG;MAEnB,IAAIC,UAAS,GAAI,EAAE;MAEnB,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACC,YAAY,CAACV,MAAM,EAAES,CAAC,EAAE,EAAE;QAC/C,IAAIhB,MAAK,GAAI,MAAMC,KAAK,CAACiB,MAAM,CAAE,+BAA8B,IAAI,CAACD,YAAY,CAACD,CAAC,CAAE,EAAC,CAAC;QACtF,IAAIhB,MAAM,CAACK,MAAK,IAAK,GAAG,EAAE;UACtBU,UAAU,CAACI,IAAI,CAAC,IAAI,CAAC;QACzB,OAAO;UACHJ,UAAU,CAACI,IAAI,CAAC,KAAK,CAAC;QAC1B;MACJ;MAEA,IAAI,CAACJ,UAAU,CAACK,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC7B,IAAI,CAACC,cAAa,GAAI,oCAAoC;QAC1D,IAAI,CAACC,YAAW,GAAI,EAAE;QACtBC,UAAU,CAAC,MAAM;UACb,IAAI,CAACC,OAAO,CAACL,IAAI,CAAC;YAAExB,IAAI,EAAE,MAAM;YAAE8B,MAAM,EAAE;cAAEC,UAAU,EAAE,IAAI,CAACvB;YAAM;UAAE,CAAC,CAAC;QAC3E,CAAC,EAAE,IAAI,CAAC;MACZ,OAAO;QACH,IAAI,CAACkB,cAAa,GAAI,EAAE;QACxB,IAAI,CAACC,YAAW,GAAI,iCAAiC;MACzD;IAEJ;EAEJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}