{"ast":null,"code":"import Navbar from '@/components/header/Navbar.vue';\nimport { mapState, mapActions, mapMutations } from 'vuex';\nexport default {\n  name: \"Menu\",\n  data() {\n    return {\n      userId: \"\",\n      userName: \"\",\n      // locationId: \"\",\n      locationId: this.$route.params.locationId\n    };\n  },\n  mounted() {\n    let user = localStorage.getItem(\"user_info\");\n    if (user) {\n      this.userId = JSON.parse(user).id;\n      this.userName = JSON.parse(user).name;\n      this.isLoggedInUser();\n      // this.locationId = this.$route.params.locationId;\n      this.displayAllCategories({\n        userIdIs: this.userId,\n        locationIdIs: this.locationId\n      });\n      this.CanUserAccessThisLocation({\n        userIdIs: this.userId,\n        locationIdIs: this.locationId,\n        redirectToPage: \"home\"\n      });\n    } else {\n      // Redirect to Sign Up page\n      this.redirectTo({\n        val: 'signup'\n      });\n    }\n  },\n  components: {\n    Navbar\n  },\n  computed: {\n    ...mapState(['isUserLoggedIn', 'LoggedInUserId', 'numOfCategories', 'listOfCategories'])\n  },\n  methods: {\n    ...mapActions(['redirectTo']),\n    ...mapMutations(['isLoggedInUser', 'displayAllCategories', 'CanUserAccessThisLocation'])\n  }\n};","map":{"version":3,"names":["Navbar","mapState","mapActions","mapMutations","name","data","userId","userName","locationId","$route","params","mounted","user","localStorage","getItem","JSON","parse","id","isLoggedInUser","displayAllCategories","userIdIs","locationIdIs","CanUserAccessThisLocation","redirectToPage","redirectTo","val","components","computed","methods"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/Menu.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <div>\n\n            <router-link :to=\"{ name: 'ViewCategories', params: { locationId: locationId } }\">\n                <button type=\"button\" class=\"btn btn-secondary float-start\">View/Add Categories</button>\n            </router-link>\n\n            <button type=\"button\" class=\"btn btn-secondary float-end\" v-if=\"numOfCategories > 0\">Add New Items</button>\n\n        </div>\n\n        <div class=\"clearfix\"></div>\n\n        {{  }}\n\n        <!-- <div>\n            Is User Logged In? {{ isUserLoggedIn }}\n            <br />\n            Num Of Categories: {{ numOfCategories }}\n            <br />\n            User Id Is: {{ LoggedInUserId }}\n            <br />\n            Categories Array: {{ listOfCategories }}\n        </div> -->\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\nimport { mapState, mapActions, mapMutations } from 'vuex';\n\nexport default {\n\n    name: \"Menu\",\n\n    data() {\n        return {\n            userId: \"\",\n            userName: \"\",\n            // locationId: \"\",\n            locationId: this.$route.params.locationId,\n        }\n    },\n\n    mounted() {\n        let user = localStorage.getItem(\"user_info\");\n        if (user) {\n            this.userId = JSON.parse(user).id;\n            this.userName = JSON.parse(user).name;\n            this.isLoggedInUser();\n            // this.locationId = this.$route.params.locationId;\n            this.displayAllCategories({ userIdIs: this.userId, locationIdIs: this.locationId });\n            this.CanUserAccessThisLocation({ userIdIs: this.userId, locationIdIs: this.locationId, redirectToPage: \"home\" });\n        }\n        else {\n            // Redirect to Sign Up page\n            this.redirectTo({ val: 'signup' });\n        }\n    },\n\n    components: {\n        Navbar,\n    },\n\n    computed: {\n        ...mapState(['isUserLoggedIn', 'LoggedInUserId', 'numOfCategories', 'listOfCategories']),\n    },\n\n    methods: {\n        ...mapActions(['redirectTo']),\n        ...mapMutations(['isLoggedInUser', 'displayAllCategories', 'CanUserAccessThisLocation']),\n    },\n\n}\n\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":"AAoCA,OAAOA,MAAK,MAAO,gCAAgC;AAEnD,SAASC,QAAQ,EAAEC,UAAU,EAAEC,YAAW,QAAS,MAAM;AAEzD,eAAe;EAEXC,IAAI,EAAE,MAAM;EAEZC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZ;MACAC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF;IACnC;EACJ,CAAC;EAEDG,OAAOA,CAAA,EAAG;IACN,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C,IAAIF,IAAI,EAAE;MACN,IAAI,CAACN,MAAK,GAAIS,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAACK,EAAE;MACjC,IAAI,CAACV,QAAO,GAAIQ,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAACR,IAAI;MACrC,IAAI,CAACc,cAAc,CAAC,CAAC;MACrB;MACA,IAAI,CAACC,oBAAoB,CAAC;QAAEC,QAAQ,EAAE,IAAI,CAACd,MAAM;QAAEe,YAAY,EAAE,IAAI,CAACb;MAAW,CAAC,CAAC;MACnF,IAAI,CAACc,yBAAyB,CAAC;QAAEF,QAAQ,EAAE,IAAI,CAACd,MAAM;QAAEe,YAAY,EAAE,IAAI,CAACb,UAAU;QAAEe,cAAc,EAAE;MAAO,CAAC,CAAC;IACpH,OACK;MACD;MACA,IAAI,CAACC,UAAU,CAAC;QAAEC,GAAG,EAAE;MAAS,CAAC,CAAC;IACtC;EACJ,CAAC;EAEDC,UAAU,EAAE;IACR1B;EACJ,CAAC;EAED2B,QAAQ,EAAE;IACN,GAAG1B,QAAQ,CAAC,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,kBAAkB,CAAC;EAC3F,CAAC;EAED2B,OAAO,EAAE;IACL,GAAG1B,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7B,GAAGC,YAAY,CAAC,CAAC,gBAAgB,EAAE,sBAAsB,EAAE,2BAA2B,CAAC;EAC3F;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}