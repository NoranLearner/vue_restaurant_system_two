{"ast":null,"code":"import Navbar from '@/components/header/Navbar.vue';\n\n// import axios from \"axios\";\n// import { mapActions } from \"vuex\";\n\nexport default {\n  name: 'DeleteAllCategories',\n  components: {\n    Navbar\n  },\n  data() {\n    //     return {\n    //         locId: this.$route.params.locationId,\n    //         userId: '',\n    //         locName: \"\",\n    //         locAddress: \"\",\n    //         allItemsIdIs: [],\n    //         allCatsIdIs: [],\n    //         successMessage: '',\n    //         errorMessage: '',\n    //     }\n  }\n\n  // async mounted() {\n  //     let user = localStorage.getItem('user-info');\n  //     if (!user) {\n  //         this.redirectTo({ val: 'sign-up' });\n  //     } else {\n\n  //         this.userId = JSON.parse(user).id;\n\n  //         this.getLocationInfo(this.userId, this.locId);\n\n  //         // All Items in This Location (KFC Restaurant)\n  //         // http://localhost:3000/items?locId=3\n  //         let result = await axios.get(`http://localhost:3000/items?locId=${this.locId}`);\n  //         let resultLength = result.data.length;\n  //         for (var i = 0; i < resultLength; i++) {\n  //             this.allItemsIdIs.push(result.data[i].id);\n  //         }\n\n  //         // All Categories in This Location (KFC Restaurant)\n  //         // http://localhost:3000/categories?locationId=3\n  //         // write locId or locationId depend on db.json file (database)\n  //         let resultCat = await axios.get(`http://localhost:3000/categories?locationId=${this.locId}`);\n  //         let resultCatLength = resultCat.data.length;\n  //         for (var i = 0; i < resultCatLength; i++) {\n  //             this.allCatsIdIs.push(resultCat.data[i].id);\n  //         }\n\n  //     }\n  // },\n\n  // methods: {\n\n  //     ...mapActions(['redirectTo']),\n\n  //     goBack() {\n  //         this.$router.push({ name: \"view-categories\", params: { locationId: this.locId } });\n  //     },\n\n  //     async getLocationInfo(userId, locId) {\n  //         let result = await axios.get(`http://localhost:3000/locations?userId=${userId}&id=${locId}`);\n  //         let locDetails = [];\n  //         if (result.status == 200) {\n  //             locDetails = result.data;\n  //             this.locName = locDetails[0].name;\n  //             this.locAddress = locDetails[0].address;\n  //         }\n  //     },\n\n  //     async deleteAllCategories() {\n\n  //         let allCatsResults = [];\n  //         for (var i = 0; i < this.allCatsIdIs.length; i++) {\n  //             let result = await axios.delete(`http://localhost:3000/categories/${this.allCatsIdIs[i]}`);\n  //             if (result.status == 200) {\n  //                 allCatsResults.push(true);\n  //             } else {\n  //                 allCatsResults.push(false);\n  //             }\n  //         }\n\n  //         let allItemsResults = [];\n  //         for (var i = 0; i < this.allItemsIdIs.length; i++) {\n  //             let result = await axios.delete(`http://localhost:3000/items/${this.allItemsIdIs[i]}`);\n  //             if (result.status == 200) {\n  //                 allItemsResults.push(true);\n  //             } else {\n  //                 allItemsResults.push(false);\n  //             }\n  //         }\n\n  //         if (!allCatsResults.includes(false) && !allItemsResults.includes(false)) {\n  //             this.successMessage = 'Category and Related Items are all deleted Successfully';\n  //             this.errorMessage = '';\n  //             setTimeout(() => {\n  //                 this.$router.push({ name: \"home\" });\n  //             }, 2000);\n  //         } else {\n  //             this.successMessage = '';\n  //             this.errorMessage = 'Something went wrong, Try again';\n  //         }\n\n  //     },\n\n  // },\n};","map":{"version":3,"names":["Navbar","name","components","data"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/DeleteAllCategories.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <!-- ------------------------- -->\n\n        <form @click.prevent>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto text-center\">\n                    <h1>Delete All Categories</h1>\n                    <hr>\n                    <p class=\"text-danger\">\n                        Are you sure you want to delete all categories for this location?\n                    </p>\n                    <div class=\"text-center\">\n                        <h1 class=\"mb\">{{ locName }}</h1>\n                        <p class=\"text-muted\">{{ locAddress }}</p>\n                    </div>\n                    <p class=\"text-danger\">\n                        When deleting all categories, Their related menu items will be deleted as well ....\n                    </p>\n                    <hr>\n                </div>\n            </div>\n\n            <!-- <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <button class=\"btn btn-info text-white\" @click=\"goBack()\">Go Back</button>\n                    &nbsp;&nbsp;&nbsp;\n                    <button class=\"btn btn-danger text-white\" @click=\"deleteAllCategories()\">Delete All Now</button>\n                </div>\n            </div> -->\n\n            <br />\n\n            <!-- <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length > 0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-warning\" v-if=\"errorMessage.length > 0\">\n                    {{ errorMessage }}\n                </div>\n            </div> -->\n\n        </form>\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\n// import axios from \"axios\";\n// import { mapActions } from \"vuex\";\n\nexport default {\n\n    name: 'DeleteAllCategories',\n\n    components: {\n        Navbar,\n    },\n\n    data() {\n    //     return {\n    //         locId: this.$route.params.locationId,\n    //         userId: '',\n    //         locName: \"\",\n    //         locAddress: \"\",\n    //         allItemsIdIs: [],\n    //         allCatsIdIs: [],\n    //         successMessage: '',\n    //         errorMessage: '',\n    //     }\n    },\n\n    // async mounted() {\n    //     let user = localStorage.getItem('user-info');\n    //     if (!user) {\n    //         this.redirectTo({ val: 'sign-up' });\n    //     } else {\n\n    //         this.userId = JSON.parse(user).id;\n\n    //         this.getLocationInfo(this.userId, this.locId);\n\n    //         // All Items in This Location (KFC Restaurant)\n    //         // http://localhost:3000/items?locId=3\n    //         let result = await axios.get(`http://localhost:3000/items?locId=${this.locId}`);\n    //         let resultLength = result.data.length;\n    //         for (var i = 0; i < resultLength; i++) {\n    //             this.allItemsIdIs.push(result.data[i].id);\n    //         }\n\n    //         // All Categories in This Location (KFC Restaurant)\n    //         // http://localhost:3000/categories?locationId=3\n    //         // write locId or locationId depend on db.json file (database)\n    //         let resultCat = await axios.get(`http://localhost:3000/categories?locationId=${this.locId}`);\n    //         let resultCatLength = resultCat.data.length;\n    //         for (var i = 0; i < resultCatLength; i++) {\n    //             this.allCatsIdIs.push(resultCat.data[i].id);\n    //         }\n\n    //     }\n    // },\n\n    // methods: {\n        \n    //     ...mapActions(['redirectTo']),\n\n    //     goBack() {\n    //         this.$router.push({ name: \"view-categories\", params: { locationId: this.locId } });\n    //     },\n\n    //     async getLocationInfo(userId, locId) {\n    //         let result = await axios.get(`http://localhost:3000/locations?userId=${userId}&id=${locId}`);\n    //         let locDetails = [];\n    //         if (result.status == 200) {\n    //             locDetails = result.data;\n    //             this.locName = locDetails[0].name;\n    //             this.locAddress = locDetails[0].address;\n    //         }\n    //     },\n\n    //     async deleteAllCategories() {\n\n    //         let allCatsResults = [];\n    //         for (var i = 0; i < this.allCatsIdIs.length; i++) {\n    //             let result = await axios.delete(`http://localhost:3000/categories/${this.allCatsIdIs[i]}`);\n    //             if (result.status == 200) {\n    //                 allCatsResults.push(true);\n    //             } else {\n    //                 allCatsResults.push(false);\n    //             }\n    //         }\n\n    //         let allItemsResults = [];\n    //         for (var i = 0; i < this.allItemsIdIs.length; i++) {\n    //             let result = await axios.delete(`http://localhost:3000/items/${this.allItemsIdIs[i]}`);\n    //             if (result.status == 200) {\n    //                 allItemsResults.push(true);\n    //             } else {\n    //                 allItemsResults.push(false);\n    //             }\n    //         }\n\n    //         if (!allCatsResults.includes(false) && !allItemsResults.includes(false)) {\n    //             this.successMessage = 'Category and Related Items are all deleted Successfully';\n    //             this.errorMessage = '';\n    //             setTimeout(() => {\n    //                 this.$router.push({ name: \"home\" });\n    //             }, 2000);\n    //         } else {\n    //             this.successMessage = '';\n    //             this.errorMessage = 'Something went wrong, Try again';\n    //         }\n\n\n    //     },\n\n    // },\n\n}\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":"AAuDA,OAAOA,MAAK,MAAO,gCAAgC;;AAEnD;AACA;;AAEA,eAAe;EAEXC,IAAI,EAAE,qBAAqB;EAE3BC,UAAU,EAAE;IACRF;EACJ,CAAC;EAEDG,IAAIA,CAAA,EAAG;IACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;;EAGA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAEA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}