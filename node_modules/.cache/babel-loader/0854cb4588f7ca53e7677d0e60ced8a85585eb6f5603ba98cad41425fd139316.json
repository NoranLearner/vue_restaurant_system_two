{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Navbar from '@/components/header/Navbar.vue';\nimport { mapActions } from \"vuex\";\nimport axios from \"axios\";\nexport default {\n  name: 'DeleteAllCategories',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      locationId: this.$route.params.locationId,\n      userId: '',\n      locName: \"\",\n      locAddress: \"\"\n      //         allItemsIdIs: [],\n      //         allCatsIdIs: [],\n    };\n  },\n  mounted() {\n    let user = localStorage.getItem(\"user_info\");\n    if (user) {\n      this.userId = JSON.parse(user).id;\n      this.getLocationInfo(this.userId, this.locationId);\n    } else {\n      // Redirect to Sign Up page\n      this.redirectTo({\n        val: 'signup'\n      });\n    }\n\n    //         // All Items in This Location (KFC Restaurant)\n    //         // http://localhost:3000/items?locId=3\n    //         let result = await axios.get(`http://localhost:3000/items?locId=${this.locId}`);\n    //         let resultLength = result.data.length;\n    //         for (var i = 0; i < resultLength; i++) {\n    //             this.allItemsIdIs.push(result.data[i].id);\n    //         }\n\n    //         // All Categories in This Location (KFC Restaurant)\n    //         // http://localhost:3000/categories?locationId=3\n    //         // write locId or locationId depend on db.json file (database)\n    //         let resultCat = await axios.get(`http://localhost:3000/categories?locationId=${this.locId}`);\n    //         let resultCatLength = resultCat.data.length;\n    //         for (var i = 0; i < resultCatLength; i++) {\n    //             this.allCatsIdIs.push(resultCat.data[i].id);\n    //         }\n\n    //     }\n  },\n  methods: {\n    ...mapActions(['redirectTo']),\n    goBack() {\n      this.$router.push({\n        name: \"ViewCategories\",\n        params: {\n          locationId: this.locationId\n        }\n      });\n    },\n    async getLocationInfo(userId, locationId) {\n      let result = await axios.get(`http://localhost:3000/locations?userId=${userId}&id=${locationId}`);\n      let locDetails = [];\n      if (result.status == 200) {\n        locDetails = result.data;\n        this.locName = locDetails[0].name;\n        this.locAddress = locDetails[0].address;\n      }\n    }\n\n    //     async deleteAllCategories() {\n\n    //         let allCatsResults = [];\n    //         for (var i = 0; i < this.allCatsIdIs.length; i++) {\n    //             let result = await axios.delete(`http://localhost:3000/categories/${this.allCatsIdIs[i]}`);\n    //             if (result.status == 200) {\n    //                 allCatsResults.push(true);\n    //             } else {\n    //                 allCatsResults.push(false);\n    //             }\n    //         }\n\n    //         let allItemsResults = [];\n    //         for (var i = 0; i < this.allItemsIdIs.length; i++) {\n    //             let result = await axios.delete(`http://localhost:3000/items/${this.allItemsIdIs[i]}`);\n    //             if (result.status == 200) {\n    //                 allItemsResults.push(true);\n    //             } else {\n    //                 allItemsResults.push(false);\n    //             }\n    //         }\n\n    //         if (!allCatsResults.includes(false) && !allItemsResults.includes(false)) {\n    //             this.successMessage = 'Category and Related Items are all deleted Successfully';\n    //             this.errorMessage = '';\n    //             setTimeout(() => {\n    //                 this.$router.push({ name: \"home\" });\n    //             }, 2000);\n    //         } else {\n    //             this.successMessage = '';\n    //             this.errorMessage = 'Something went wrong, Try again';\n    //         }\n\n    //     },\n  }\n};","map":{"version":3,"names":["Navbar","mapActions","axios","name","components","data","locationId","$route","params","userId","locName","locAddress","mounted","user","localStorage","getItem","JSON","parse","id","getLocationInfo","redirectTo","val","methods","goBack","$router","push","result","get","locDetails","status","address"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/DeleteAllCategories.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <!-- ------------------------- -->\n\n        <form @click.prevent>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto text-center\">\n                    <h1>Delete All Categories</h1>\n                    <hr>\n                    <p class=\"text-danger\">\n                        Are you sure you want to delete all categories for this location?\n                    </p>\n                    <div class=\"text-center\">\n                        <h1 class=\"mb\">{{ locName }}</h1>\n                        <p class=\"text-muted\">{{ locAddress }}</p>\n                    </div>\n                    <p class=\"text-danger\">\n                        When deleting all categories, Their related menu items will be deleted as well ....\n                    </p>\n                    <hr>\n                </div>\n            </div>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <button class=\"btn btn-info text-white\" @click=\"goBack()\">Go Back</button>\n                    &nbsp;&nbsp;&nbsp;\n                    <!-- <button class=\"btn btn-danger text-white\" @click=\"deleteAllCategories()\">Delete All Now</button> -->\n                </div>\n            </div>\n\n            <br />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length > 0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-warning\" v-if=\"errorMessage.length > 0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n\n        </form>\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\nimport { mapActions } from \"vuex\";\n\nimport axios from \"axios\";\n\nexport default {\n\n    name: 'DeleteAllCategories',\n\n    components: {\n        Navbar,\n    },\n\n    data() {\n        return {\n            locationId: this.$route.params.locationId,\n            userId: '',\n            locName: \"\",\n            locAddress: \"\",\n    //         allItemsIdIs: [],\n    //         allCatsIdIs: [],\n        }\n    },\n\n    mounted() {\n\n        let user = localStorage.getItem(\"user_info\");\n\n        if (user) {\n\n            this.userId = JSON.parse(user).id;\n\n            this.getLocationInfo(this.userId, this.locationId);\n\n        } else {\n\n            // Redirect to Sign Up page\n            this.redirectTo({ val: 'signup' });\n\n        }\n\n    //         // All Items in This Location (KFC Restaurant)\n    //         // http://localhost:3000/items?locId=3\n    //         let result = await axios.get(`http://localhost:3000/items?locId=${this.locId}`);\n    //         let resultLength = result.data.length;\n    //         for (var i = 0; i < resultLength; i++) {\n    //             this.allItemsIdIs.push(result.data[i].id);\n    //         }\n\n    //         // All Categories in This Location (KFC Restaurant)\n    //         // http://localhost:3000/categories?locationId=3\n    //         // write locId or locationId depend on db.json file (database)\n    //         let resultCat = await axios.get(`http://localhost:3000/categories?locationId=${this.locId}`);\n    //         let resultCatLength = resultCat.data.length;\n    //         for (var i = 0; i < resultCatLength; i++) {\n    //             this.allCatsIdIs.push(resultCat.data[i].id);\n    //         }\n\n    //     }\n    },\n\n    methods: {\n        \n        ...mapActions(['redirectTo']),\n\n        goBack() {\n            this.$router.push({ name: \"ViewCategories\", params: { locationId: this.locationId } });\n        },\n\n        async getLocationInfo(userId, locationId) {\n            let result = await axios.get(`http://localhost:3000/locations?userId=${userId}&id=${locationId}`);\n            let locDetails = [];\n            if (result.status == 200) {\n                locDetails = result.data;\n                this.locName = locDetails[0].name;\n                this.locAddress = locDetails[0].address;\n            }\n        },\n\n    //     async deleteAllCategories() {\n\n    //         let allCatsResults = [];\n    //         for (var i = 0; i < this.allCatsIdIs.length; i++) {\n    //             let result = await axios.delete(`http://localhost:3000/categories/${this.allCatsIdIs[i]}`);\n    //             if (result.status == 200) {\n    //                 allCatsResults.push(true);\n    //             } else {\n    //                 allCatsResults.push(false);\n    //             }\n    //         }\n\n    //         let allItemsResults = [];\n    //         for (var i = 0; i < this.allItemsIdIs.length; i++) {\n    //             let result = await axios.delete(`http://localhost:3000/items/${this.allItemsIdIs[i]}`);\n    //             if (result.status == 200) {\n    //                 allItemsResults.push(true);\n    //             } else {\n    //                 allItemsResults.push(false);\n    //             }\n    //         }\n\n    //         if (!allCatsResults.includes(false) && !allItemsResults.includes(false)) {\n    //             this.successMessage = 'Category and Related Items are all deleted Successfully';\n    //             this.errorMessage = '';\n    //             setTimeout(() => {\n    //                 this.$router.push({ name: \"home\" });\n    //             }, 2000);\n    //         } else {\n    //             this.successMessage = '';\n    //             this.errorMessage = 'Something went wrong, Try again';\n    //         }\n\n\n    //     },\n\n    },\n\n}\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":";AAuDA,OAAOA,MAAK,MAAO,gCAAgC;AAEnD,SAASC,UAAS,QAAS,MAAM;AAEjC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EAEXC,IAAI,EAAE,qBAAqB;EAE3BC,UAAU,EAAE;IACRJ;EACJ,CAAC;EAEDK,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,UAAU;MACzCG,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE;MACpB;MACA;IACI;EACJ,CAAC;EAEDC,OAAOA,CAAA,EAAG;IAEN,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE5C,IAAIF,IAAI,EAAE;MAEN,IAAI,CAACJ,MAAK,GAAIO,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAACK,EAAE;MAEjC,IAAI,CAACC,eAAe,CAAC,IAAI,CAACV,MAAM,EAAE,IAAI,CAACH,UAAU,CAAC;IAEtD,OAAO;MAEH;MACA,IAAI,CAACc,UAAU,CAAC;QAAEC,GAAG,EAAE;MAAS,CAAC,CAAC;IAEtC;;IAEJ;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;EACA,CAAC;EAEDC,OAAO,EAAE;IAEL,GAAGrB,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAE7BsB,MAAMA,CAAA,EAAG;MACL,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEtB,IAAI,EAAE,gBAAgB;QAAEK,MAAM,EAAE;UAAEF,UAAU,EAAE,IAAI,CAACA;QAAW;MAAE,CAAC,CAAC;IAC1F,CAAC;IAED,MAAMa,eAAeA,CAACV,MAAM,EAAEH,UAAU,EAAE;MACtC,IAAIoB,MAAK,GAAI,MAAMxB,KAAK,CAACyB,GAAG,CAAE,0CAAyClB,MAAO,OAAMH,UAAW,EAAC,CAAC;MACjG,IAAIsB,UAAS,GAAI,EAAE;MACnB,IAAIF,MAAM,CAACG,MAAK,IAAK,GAAG,EAAE;QACtBD,UAAS,GAAIF,MAAM,CAACrB,IAAI;QACxB,IAAI,CAACK,OAAM,GAAIkB,UAAU,CAAC,CAAC,CAAC,CAACzB,IAAI;QACjC,IAAI,CAACQ,UAAS,GAAIiB,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO;MAC3C;IACJ;;IAEJ;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA;EAEA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}