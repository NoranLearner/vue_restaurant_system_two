{"ast":null,"code":"import Navbar from '@/components/header/Navbar.vue';\nimport { mapActions, mapMutations } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'AddNewCategory',\n  data() {\n    return {\n      userId: '',\n      userName: '',\n      locationId: this.$route.params.locationId,\n      locName: '',\n      locAddress: '',\n      successMessage: \"\",\n      errorMessage: \"\"\n    };\n  },\n  mounted() {\n    let user = localStorage.getItem(\"user_info\");\n    if (user) {\n      this.userId = JSON.parse(user).id;\n      this.userName = JSON.parse(user).name;\n      this.CanUserAccessThisLocation({\n        userIdIs: this.userId,\n        locationIdIs: this.locationId,\n        redirectToPage: \"home\"\n      });\n      this.getLocationInfo(this.userId, this.locationId);\n    } else {\n      // Redirect to Sign Up page\n      this.redirectTo({\n        val: 'signup'\n      });\n    }\n  },\n  components: {\n    Navbar\n  },\n  methods: {\n    ...mapActions(['redirectTo']),\n    ...mapMutations(['CanUserAccessThisLocation']),\n    async getLocationInfo(userId, locationId) {\n      let result = await axios.get(`http://localhost:3000/locations?id=${this.locationId}&userId=${this.userId}`);\n      let locDetails = [];\n      if (result.status == 200 && result.data.length > 0) {\n        locDetails = result.data;\n        this.locName = locDetails[0].name;\n        this.locAddress = locDetails[0].address;\n      }\n    }\n  }\n};","map":{"version":3,"names":["Navbar","mapActions","mapMutations","axios","name","data","userId","userName","locationId","$route","params","locName","locAddress","successMessage","errorMessage","mounted","user","localStorage","getItem","JSON","parse","id","CanUserAccessThisLocation","userIdIs","locationIdIs","redirectToPage","getLocationInfo","redirectTo","val","components","methods","result","get","locDetails","status","length","address"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/AddNewCategory.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <router-link :to=\"{ name: 'ViewCategories', params: { locationId: locationId } }\">\n            <button type=\"button\" class=\"btn btn-secondary float-start\">Back To Category</button>\n        </router-link>\n\n        <router-link :to=\"{ name: 'Menu', params: { locationId: locationId } }\">\n            <button type=\"button\" class=\"btn btn-light float-end\">Back To Menu</button>\n        </router-link>\n\n        <div class=\"clearfix\"></div>\n\n        <div class=\"text-center\">\n            <h1>{{ locName }}</h1>\n            <p class=\"text-muted\">{{ locAddress }}</p>\n        </div>\n\n        <!-- Add New Category Form -->\n\n        <form @click.prevent>\n\n            <h1 class=\"text-center\">Add New Category</h1>\n\n            <br/>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Category Name\" v-model=\"name\">\n                    <span class=\"error-feedback\" v-if=\"v$.name.$error\">{{ v$.name.$errors[0].$message }}</span>\n                </div>\n            </div>\n\n            <br/>\n            \n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length > 0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-danger\" v-if=\"errorMessage.length > 0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n\n            <br/>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <button type=\"button\" @click=\"addCategory()\" class=\"btn btn-success\">Add Now</button>\n                </div>\n            </div>\n\n        </form>\n\n        <!-- <form @click.prevent>\n            <h1 class=\"text-center\">Add New Category</h1>\n            <br />\n            \n            <br />\n            \n            <br />\n            \n        </form> -->\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\nimport { mapActions, mapMutations } from 'vuex';\n\nimport axios from 'axios';\n\nexport default {\n\n    name: 'AddNewCategory',\n\n    data() {\n        return {\n            userId: '',\n            userName: '',\n            locationId: this.$route.params.locationId,\n            locName: '',\n            locAddress: '',\n            successMessage: \"\",\n            errorMessage: \"\",\n        }\n    },\n\n    mounted() {\n        let user = localStorage.getItem(\"user_info\");\n        if (user) {\n            this.userId = JSON.parse(user).id;\n            this.userName = JSON.parse(user).name;\n            this.CanUserAccessThisLocation({ userIdIs: this.userId, locationIdIs: this.locationId, redirectToPage: \"home\" });\n            this.getLocationInfo(this.userId, this.locationId);\n        }\n        else {\n            // Redirect to Sign Up page\n            this.redirectTo({ val: 'signup' });\n        }\n    },\n\n    components: {\n        Navbar,\n    },\n\n    methods: {\n        ...mapActions(['redirectTo']),\n        ...mapMutations(['CanUserAccessThisLocation']),\n        async getLocationInfo(userId, locationId) {\n            let result = await axios.get(`http://localhost:3000/locations?id=${this.locationId}&userId=${this.userId}`);\n            let locDetails = [];\n            if (result.status == 200 && result.data.length > 0) {\n                locDetails = result.data;\n                this.locName = locDetails[0].name;\n                this.locAddress = locDetails[0].address;\n            }\n        },\n    },\n\n}\n\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":"AAyEA,OAAOA,MAAK,MAAO,gCAAgC;AAEnD,SAASC,UAAU,EAAEC,YAAW,QAAS,MAAM;AAE/C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EAEXC,IAAI,EAAE,gBAAgB;EAEtBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,UAAU;MACzCG,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE,EAAE;MACdC,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE;IAClB;EACJ,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACN,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C,IAAIF,IAAI,EAAE;MACN,IAAI,CAACV,MAAK,GAAIa,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAACK,EAAE;MACjC,IAAI,CAACd,QAAO,GAAIY,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAACZ,IAAI;MACrC,IAAI,CAACkB,yBAAyB,CAAC;QAAEC,QAAQ,EAAE,IAAI,CAACjB,MAAM;QAAEkB,YAAY,EAAE,IAAI,CAAChB,UAAU;QAAEiB,cAAc,EAAE;MAAO,CAAC,CAAC;MAChH,IAAI,CAACC,eAAe,CAAC,IAAI,CAACpB,MAAM,EAAE,IAAI,CAACE,UAAU,CAAC;IACtD,OACK;MACD;MACA,IAAI,CAACmB,UAAU,CAAC;QAAEC,GAAG,EAAE;MAAS,CAAC,CAAC;IACtC;EACJ,CAAC;EAEDC,UAAU,EAAE;IACR7B;EACJ,CAAC;EAED8B,OAAO,EAAE;IACL,GAAG7B,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7B,GAAGC,YAAY,CAAC,CAAC,2BAA2B,CAAC,CAAC;IAC9C,MAAMwB,eAAeA,CAACpB,MAAM,EAAEE,UAAU,EAAE;MACtC,IAAIuB,MAAK,GAAI,MAAM5B,KAAK,CAAC6B,GAAG,CAAE,sCAAqC,IAAI,CAACxB,UAAW,WAAU,IAAI,CAACF,MAAO,EAAC,CAAC;MAC3G,IAAI2B,UAAS,GAAI,EAAE;MACnB,IAAIF,MAAM,CAACG,MAAK,IAAK,GAAE,IAAKH,MAAM,CAAC1B,IAAI,CAAC8B,MAAK,GAAI,CAAC,EAAE;QAChDF,UAAS,GAAIF,MAAM,CAAC1B,IAAI;QACxB,IAAI,CAACM,OAAM,GAAIsB,UAAU,CAAC,CAAC,CAAC,CAAC7B,IAAI;QACjC,IAAI,CAACQ,UAAS,GAAIqB,UAAU,CAAC,CAAC,CAAC,CAACG,OAAO;MAC3C;IACJ;EACJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}