{"ast":null,"code":"// For validate data\nimport useValidate from \"@vuelidate/core\";\nimport { required, minLength } from \"@vuelidate/validators\";\n\n// For Composition Api\nimport { reactive, computed } from \"vue\";\nimport { mapActions } from 'vuex';\nexport default {\n  name: \"AddNewLocation\",\n  mounted() {\n    let user = localStorage.getItem(\"user_info\");\n    if (user) {\n      // Redirect to Home page\n      this.redirectTo({\n        val: 'home'\n      });\n    }\n  },\n  setup() {\n    // Data\n    const state = reactive({\n      name: '',\n      phone: '',\n      address: ''\n    });\n    // Validations\n    const rules = computed(() => {\n      return {\n        name: {\n          required,\n          minLength: minLength(10)\n        },\n        phone: {\n          required,\n          minLength: minLength(11)\n        },\n        address: {\n          required\n        }\n      };\n    });\n    // Write rules first\n    const v$ = useValidate(rules, state);\n    return {\n      state,\n      v$\n    };\n  },\n  data() {\n    return {\n      name: \"\",\n      phone: \"\",\n      address: \"\"\n    };\n  },\n  methods: {\n    ...mapActions(['redirectTo']),\n    async addLocation() {\n      // Activate Validation\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        console.log(\"Form Validated Successfully\");\n      } else {\n        console.warn(\"Form Validation Failed\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["useValidate","required","minLength","reactive","computed","mapActions","name","mounted","user","localStorage","getItem","redirectTo","val","setup","state","phone","address","rules","v$","data","methods","addLocation","$validate","$error","console","log","warn"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/locations/AddNewLocation.vue"],"sourcesContent":["<template>\n\n    <!-- Button trigger modal -->\n    <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n        Add New Restaurant\n    </button>\n\n    <!-- Modal -->\n    <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n\n        <div class=\"modal-dialog\">\n\n            <div class=\"modal-content\">\n\n                <div class=\"modal-header\">\n                    <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Add New Restaurant</h1>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n\n                <div class=\"modal-body\">\n\n                    <form @click.prevent>\n\n                        <div class=\"row g-3 align-items-center\">\n                            <div class=\"col-auto d-block mx-auto\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Restaurant Name\"\n                                    v-model.trim=\"state.name\">\n                                <span class=\"text-danger\"\n                                    v-if=\"v$.name.$error\">{{ v$.name.$errors[0].$message }}</span>\n                            </div>\n                        </div>\n                        <br />\n                        <div class=\"row g-3 align-items-center\">\n                            <div class=\"col-auto d-block mx-auto\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Phone Number\"\n                                    v-model.trim=\"state.phone\">\n                                <span class=\"text-danger\"\n                                    v-if=\"v$.phone.$error\">{{ v$.phone.$errors[0].$message }}</span>\n                            </div>\n                        </div>\n                        <br />\n                        <div class=\"row g-3 align-items-center\">\n                            <div class=\"col-auto d-block mx-auto\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Restaurant Address\"\n                                    v-model.trim=\"state.address\">\n                                <span class=\"text-danger\"\n                                    v-if=\"v$.address.$error\">{{ v$.address.$errors[0].$message }}</span>\n                            </div>\n                        </div>\n\n                    </form>\n\n                </div>\n\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                    <button type=\"button\" class=\"btn btn-primary\" @click=\"addLocation()\">Add Now</button>\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n\n</template>\n\n<script>\n\n// For validate data\nimport useValidate from \"@vuelidate/core\";\nimport { required, minLength } from \"@vuelidate/validators\";\n\n// For Composition Api\nimport { reactive, computed } from \"vue\";\n\nimport { mapActions } from 'vuex';\n\nexport default {\n\n    name: \"AddNewLocation\",\n\n    mounted() {\n        let user = localStorage.getItem(\"user_info\");\n        if (user) {\n            // Redirect to Home page\n            this.redirectTo({val: 'home'});\n        }\n    },\n\n    setup() {\n        // Data\n        const state = reactive({\n            name: '',\n            phone: '',\n            address: '',\n        });\n        // Validations\n        const rules = computed(() => {\n            return {\n                name: { required, minLength: minLength(10) },\n                phone: { required, minLength: minLength(11) },\n                address: { required },\n            };\n        });\n        // Write rules first\n        const v$ = useValidate(rules, state);\n        return { state, v$ };\n    },\n\n    data() {\n        return {\n            name: \"\",\n            phone: \"\",\n            address: \"\",\n        }\n    },\n\n    methods: {\n        ...mapActions(['redirectTo']),\n        async addLocation() {\n            // Activate Validation\n            this.v$.$validate();\n            if (!this.v$.$error) {\n                console.log(\"Form Validated Successfully\");\n                \n            } else {\n                console.warn(\"Form Validation Failed\");\n            }\n        },\n    }\n\n}\n\n</script>\n\n<style scoped lang=\"scss\"></style>"],"mappings":"AAqEA;AACA,OAAOA,WAAU,MAAO,iBAAiB;AACzC,SAASC,QAAQ,EAAEC,SAAQ,QAAS,uBAAuB;;AAE3D;AACA,SAASC,QAAQ,EAAEC,QAAO,QAAS,KAAK;AAExC,SAASC,UAAS,QAAS,MAAM;AAEjC,eAAe;EAEXC,IAAI,EAAE,gBAAgB;EAEtBC,OAAOA,CAAA,EAAG;IACN,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C,IAAIF,IAAI,EAAE;MACN;MACA,IAAI,CAACG,UAAU,CAAC;QAACC,GAAG,EAAE;MAAM,CAAC,CAAC;IAClC;EACJ,CAAC;EAEDC,KAAKA,CAAA,EAAG;IACJ;IACA,MAAMC,KAAI,GAAIX,QAAQ,CAAC;MACnBG,IAAI,EAAE,EAAE;MACRS,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACb,CAAC,CAAC;IACF;IACA,MAAMC,KAAI,GAAIb,QAAQ,CAAC,MAAM;MACzB,OAAO;QACHE,IAAI,EAAE;UAAEL,QAAQ;UAAEC,SAAS,EAAEA,SAAS,CAAC,EAAE;QAAE,CAAC;QAC5Ca,KAAK,EAAE;UAAEd,QAAQ;UAAEC,SAAS,EAAEA,SAAS,CAAC,EAAE;QAAE,CAAC;QAC7Cc,OAAO,EAAE;UAAEf;QAAS;MACxB,CAAC;IACL,CAAC,CAAC;IACF;IACA,MAAMiB,EAAC,GAAIlB,WAAW,CAACiB,KAAK,EAAEH,KAAK,CAAC;IACpC,OAAO;MAAEA,KAAK;MAAEI;IAAG,CAAC;EACxB,CAAC;EAEDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHb,IAAI,EAAE,EAAE;MACRS,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACb;EACJ,CAAC;EAEDI,OAAO,EAAE;IACL,GAAGf,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7B,MAAMgB,WAAWA,CAAA,EAAG;MAChB;MACA,IAAI,CAACH,EAAE,CAACI,SAAS,CAAC,CAAC;MACnB,IAAI,CAAC,IAAI,CAACJ,EAAE,CAACK,MAAM,EAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAE9C,OAAO;QACHD,OAAO,CAACE,IAAI,CAAC,wBAAwB,CAAC;MAC1C;IACJ;EACJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}