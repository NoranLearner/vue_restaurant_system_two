{"ast":null,"code":"import axios from 'axios';\nimport { mapActions } from 'vuex';\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\nexport default {\n  name: 'SignUp',\n  mounted() {\n    let user = localStorage.getItem(\"user_info\");\n    if (user) {\n      // Redirect to Home page\n      this.redirectTo({\n        val: 'home'\n      });\n    }\n  },\n  data() {\n    return {\n      v$: useValidate(),\n      name: \"\",\n      email: \"\",\n      pass: \"\",\n      successMessage: \"\",\n      errorMessage: \"\",\n      userEmailExists: ''\n    };\n  },\n  validations() {\n    return {\n      name: {\n        required,\n        minLength: minLength(10)\n      },\n      email: {\n        required,\n        email\n      },\n      pass: {\n        required,\n        minLength: minLength(10)\n      }\n    };\n  },\n  methods: {\n    ...mapActions(['redirectTo']),\n    async SignUpNow() {\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        console.log('Form Validated Successfully');\n        let result = await axios.post('http://localhost:3000/users', {\n          name: this.name,\n          email: this.email,\n          password: this.pass\n        });\n        if (result.status = 201) {\n          console.log('Added New User Successfully');\n          // Save user data in local storage\n          localStorage.setItem(\"user_info\", JSON.stringify(result.data));\n          this.errorMessage = '';\n          this.successMessage = 'Loading ....';\n          // Redirect to Home page\n          setTimeout(() => {\n            // redirect to home page\n            this.redirectTo({\n              val: 'home'\n            });\n          }, 2000);\n        } else {\n          console.log('Error on adding new user');\n        }\n      } else {\n        console.log('Form Validation Failed');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","mapActions","useValidate","required","email","minLength","name","mounted","user","localStorage","getItem","redirectTo","val","data","v$","pass","successMessage","errorMessage","userEmailExists","validations","methods","SignUpNow","$validate","$error","console","log","result","post","password","status","setItem","JSON","stringify","setTimeout"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/signup/SignUp.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <form @click.prevent>\n            <div class=\"row g-3 align-items-center\">\n                <h1 class=\"text-center pt-2\">Sign Up</h1>\n                <div class=\"col-auto d-block mx-auto\">\n                    <!-- <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Name\" v-model=\"name\"> -->\n                    <div class=\"form-floating mb-3\" :class=\"{ 'form-group--error': v$.email.$error }\">\n                        <input type=\"text\" class=\"form-control\" id=\"floatingEmail\" placeholder=\"Enter Your Name\"\n                            v-model.trim=\"name\">\n                        <label for=\"floatingEmail\">Enter Your Name</label>\n                        <span class=\"text-danger\" v-if=\"v$.name.$error\">{{ v$.name.$errors[0].$message }}</span>\n                    </div>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <!-- <input type=\"email\" class=\"form-control\" placeholder=\"Enter Your Email\" v-model=\"email\"> -->\n                    <div class=\"form-floating mb-3\" :class=\"{ 'form-group--error': v$.email.$error }\">\n                        <input type=\"email\" class=\"form-control\" id=\"floatingEmail\" placeholder=\"Enter Your Email\"\n                            v-model.trim=\"email\">\n                        <label for=\"floatingEmail\">Enter Your Email</label>\n                        <span class=\"error-feedback\" v-if=\"v$.email.$error\">{{ v$.email.$errors[0].$message }}</span>\n                    </div>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <!-- <input type=\"password\" class=\"form-control\" placeholder=\"Enter Your Password\" v-model=\"pass\"> -->\n                    <div class=\"form-floating\" :class=\"{ 'form-group--error': v$.pass.$error }\">\n                        <input type=\"password\" class=\"form-control\" id=\"floatingPassword\"\n                            placeholder=\"Enter Your Password\" v-model.trim=\"pass\">\n                        <label for=\"floatingPassword\">Enter Your Password</label>\n                        <span class=\"error-feedback\" v-if=\"v$.pass.$error\">{{ v$.pass.$errors[0].$message }}</span>\n                    </div>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <!-- <button type=\"submit\" class=\"btn btn-primary\" @click=\"SignUpNow()\"> Sign Up Now </button> -->\n                    <button type=\"submit\" class=\"btn btn-primary\" @click=\"validateEmail()\"> Sign Up Now </button>\n                    &nbsp;\n                    <button type=\"button\" class=\"btn btn-link\" @click=\"redirectTo({ val: 'login' })\"> Have an account,\n                        Login Now </button>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length > 0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-danger\" v-if=\"errorMessage.length > 0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { mapActions } from 'vuex';\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\nexport default {\n    name: 'SignUp',\n    mounted() {\n        let user = localStorage.getItem(\"user_info\");\n        if (user) {\n            // Redirect to Home page\n            this.redirectTo({ val: 'home' });\n        }\n    },\n    data() {\n        return {\n            v$: useValidate(),\n            name: \"\",\n            email: \"\",\n            pass: \"\",\n            successMessage: \"\",\n            errorMessage: \"\",\n            userEmailExists: '',\n        }\n    },\n    validations() {\n        return {\n            name: { required, minLength: minLength(10) },\n            email: { required, email },\n            pass: { required, minLength: minLength(10) },\n        }\n    },\n    methods: {\n        ...mapActions(['redirectTo']),\n        async SignUpNow() {\n            this.v$.$validate();\n            if (!this.v$.$error) {\n                console.log('Form Validated Successfully');\n                let result = await axios.post('http://localhost:3000/users', {\n                    name: this.name,\n                    email: this.email,\n                    password: this.pass,\n                });\n                if (result.status = 201) {\n                    console.log('Added New User Successfully');\n                    // Save user data in local storage\n                    localStorage.setItem(\"user_info\", JSON.stringify(result.data));\n                    this.errorMessage = '';\n                    this.successMessage = 'Loading ....';\n                    // Redirect to Home page\n                    setTimeout(() => {\n                        // redirect to home page\n                        this.redirectTo({ val: 'home' });\n                    }, 2000);\n                } else {\n                    console.log('Error on adding new user');\n                }\n            } else {\n                console.log('Form Validation Failed');\n            }\n        }\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.error-feedback {\n    color: red;\n    font-size: 0.85em;\n}\n</style>"],"mappings":"AA+DA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,UAAS,QAAS,MAAM;AACjC,OAAOC,WAAU,MAAO,iBAAiB;AACzC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,SAAQ,QAAS,uBAAuB;AAClE,eAAe;EACXC,IAAI,EAAE,QAAQ;EACdC,OAAOA,CAAA,EAAG;IACN,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C,IAAIF,IAAI,EAAE;MACN;MACA,IAAI,CAACG,UAAU,CAAC;QAAEC,GAAG,EAAE;MAAO,CAAC,CAAC;IACpC;EACJ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,EAAE,EAAEZ,WAAW,CAAC,CAAC;MACjBI,IAAI,EAAE,EAAE;MACRF,KAAK,EAAE,EAAE;MACTW,IAAI,EAAE,EAAE;MACRC,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE,EAAE;MAChBC,eAAe,EAAE;IACrB;EACJ,CAAC;EACDC,WAAWA,CAAA,EAAG;IACV,OAAO;MACHb,IAAI,EAAE;QAAEH,QAAQ;QAAEE,SAAS,EAAEA,SAAS,CAAC,EAAE;MAAE,CAAC;MAC5CD,KAAK,EAAE;QAAED,QAAQ;QAAEC;MAAM,CAAC;MAC1BW,IAAI,EAAE;QAAEZ,QAAQ;QAAEE,SAAS,EAAEA,SAAS,CAAC,EAAE;MAAE;IAC/C;EACJ,CAAC;EACDe,OAAO,EAAE;IACL,GAAGnB,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7B,MAAMoB,SAASA,CAAA,EAAG;MACd,IAAI,CAACP,EAAE,CAACQ,SAAS,CAAC,CAAC;MACnB,IAAI,CAAC,IAAI,CAACR,EAAE,CAACS,MAAM,EAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C,IAAIC,MAAK,GAAI,MAAM1B,KAAK,CAAC2B,IAAI,CAAC,6BAA6B,EAAE;UACzDrB,IAAI,EAAE,IAAI,CAACA,IAAI;UACfF,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBwB,QAAQ,EAAE,IAAI,CAACb;QACnB,CAAC,CAAC;QACF,IAAIW,MAAM,CAACG,MAAK,GAAI,GAAG,EAAE;UACrBL,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;UAC1C;UACAhB,YAAY,CAACqB,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACN,MAAM,CAACb,IAAI,CAAC,CAAC;UAC9D,IAAI,CAACI,YAAW,GAAI,EAAE;UACtB,IAAI,CAACD,cAAa,GAAI,cAAc;UACpC;UACAiB,UAAU,CAAC,MAAM;YACb;YACA,IAAI,CAACtB,UAAU,CAAC;cAAEC,GAAG,EAAE;YAAO,CAAC,CAAC;UACpC,CAAC,EAAE,IAAI,CAAC;QACZ,OAAO;UACHY,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QAC3C;MACJ,OAAO;QACHD,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACzC;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}