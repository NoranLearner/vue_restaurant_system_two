{"ast":null,"code":"import Navbar from '@/components/header/Navbar.vue';\n\n// import { mapActions, mapMutations } from 'vuex';\n\n// import axios from 'axios';\n\n// // For validate data\n\n// import useValidate from \"@vuelidate/core\";\n\n// import { required, minLength, maxLength } from \"@vuelidate/validators\";\n\nexport default {\n  name: 'UpdateCategory',\n  data() {\n    return {\n      userId: '',\n      userName: '',\n      locationId: this.$route.params.locationId,\n      locName: '',\n      locAddress: '',\n      name: \"\",\n      successMessage: \"\",\n      errorMessage: \"\",\n      v$: useValidate(),\n      listOfUserCategories: []\n    };\n  },\n  components: {\n    Navbar\n  }\n};","map":{"version":3,"names":["Navbar","name","data","userId","userName","locationId","$route","params","locName","locAddress","successMessage","errorMessage","v$","useValidate","listOfUserCategories","components"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/UpdateCategory.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <!-- <router-link :to=\"{ name: 'ViewCategories', params: { locationId: locationId } }\">\n            <button type=\"button\" class=\"btn btn-secondary float-start\">Back To Category</button>\n        </router-link> -->\n\n        <!-- <router-link :to=\"{ name: 'Menu', params: { locationId: locationId } }\">\n            <button type=\"button\" class=\"btn btn-light float-end\">Back To Menu</button>\n        </router-link> -->\n\n        <!-- <div class=\"clearfix\"></div> -->\n\n        <!-- <div class=\"text-center\">\n            <h1>{{ locName }}</h1>\n            <p class=\"text-muted\">{{ locAddress }}</p>\n        </div> -->\n\n        <!-- Add New Category Form -->\n\n        <!-- <form @click.prevent>\n\n            <h1 class=\"text-center\">Add New Category</h1>\n\n            <br />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Category Name\" v-model.trim=\"name\">\n                    <span class=\"text-danger\" v-if=\"v$.name.$error\">{{ v$.name.$errors[0].$message }}</span>\n                </div>\n            </div>\n\n            <br />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length > 0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-danger\" v-if=\"errorMessage.length > 0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n\n            <br />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <button type=\"button\" @click=\"addCategory()\" class=\"btn btn-success\">Add Now</button>\n                </div>\n            </div>\n\n        </form> -->\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\n// import { mapActions, mapMutations } from 'vuex';\n\n// import axios from 'axios';\n\n// // For validate data\n\n// import useValidate from \"@vuelidate/core\";\n\n// import { required, minLength, maxLength } from \"@vuelidate/validators\";\n\nexport default {\n\n    name: 'UpdateCategory',\n\n    data() {\n        return {\n            userId: '',\n            userName: '',\n            locationId: this.$route.params.locationId,\n            locName: '',\n            locAddress: '',\n            name: \"\",\n            successMessage: \"\",\n            errorMessage: \"\",\n            v$: useValidate(),\n            listOfUserCategories: [],\n        }\n    },\n\n    components: {\n        Navbar,\n    },\n\n}\n\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":"AA+DA,OAAOA,MAAK,MAAO,gCAAgC;;AAEnD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,eAAe;EAEXC,IAAI,EAAE,gBAAgB;EAEtBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,UAAU;MACzCG,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE,EAAE;MACdR,IAAI,EAAE,EAAE;MACRS,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE,EAAE;MAChBC,EAAE,EAAEC,WAAW,CAAC,CAAC;MACjBC,oBAAoB,EAAE;IAC1B;EACJ,CAAC;EAEDC,UAAU,EAAE;IACRf;EACJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}