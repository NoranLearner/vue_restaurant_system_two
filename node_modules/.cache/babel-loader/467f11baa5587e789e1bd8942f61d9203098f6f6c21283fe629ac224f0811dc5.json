{"ast":null,"code":"import axios from \"axios\";\nimport { mapActions } from 'vuex';\n// For validate data\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\n// For Composition Api\nimport { reactive, computed } from \"vue\";\nexport default {\n  name: 'Login',\n  setup() {\n    // Data\n    const state = reactive({\n      email: \"\",\n      pass: \"\"\n    });\n    // Validations\n    const rules = computed(() => {\n      return {\n        email: {\n          required,\n          email\n        },\n        pass: {\n          required,\n          minLength: minLength(10)\n        }\n      };\n    });\n    // Write rules first\n    const v$ = useValidate(rules, state);\n    return {\n      state,\n      v$\n    };\n  },\n  mounted() {\n    let user = localStorage.getItem(\"user_info\");\n    if (user) {\n      // Redirect to Home page\n      this.redirectTo({\n        val: 'home'\n      });\n    }\n  },\n  data() {\n    return {\n      UserNotFoundError: ''\n    };\n  },\n  methods: {\n    ...mapActions(['redirectTo']),\n    async LoginNow() {\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        console.log('Form Validated Successfully');\n        let result = await axios.get(`http://localhost:3000/users?email=${this.state.email}&password=${this.state.pass}`);\n        console.log(result);\n        if (result.status == 200 && result.data.length > 0) {\n          // Save user data in local storage\n          localStorage.setItem(\"user_info\", JSON.stringify(result.data[0]));\n          // Redirect to Home page\n          this.redirectTo({\n            val: 'home'\n          });\n        } else {\n          this.UserNotFoundError = 'User Not Found';\n        }\n      } else {\n        console.log('Form Validation Failed');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","mapActions","useValidate","required","email","minLength","reactive","computed","name","setup","state","pass","rules","v$","mounted","user","localStorage","getItem","redirectTo","val","data","UserNotFoundError","methods","LoginNow","$validate","$error","console","log","result","get","status","length","setItem","JSON","stringify"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/login/Login.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <form @click.prevent>\n            <div class=\"row g-3 align-items-center\">\n                <h1 class=\"text-center pt-2\">Login</h1>\n                <div class=\"col-auto d-block mx-auto\">\n                    <!-- <input type=\"email\" class=\"form-control\" placeholder=\"Enter Your Email\" v-model=\"state.email\"> -->\n                    <!-- https://getbootstrap.com/docs/5.0/forms/floating-labels/ -->\n                    <div class=\"form-floating mb-3\" :class=\"{ 'form-group--error': v$.email.$error }\">\n                        <input type=\"email\" class=\"form-control w300\" id=\"floatingEmail\" placeholder=\"Enter Your Email\"\n                            v-model.trim=\"state.email\">\n                        <label for=\"floatingEmail\">Enter Your Email</label>\n                        <span class=\"text-danger\" v-if=\"v$.email.$error\">{{ v$.email.$errors[0].$message }}</span>\n                    </div>\n                </div>\n            </div>\n                <br />\n                <div class=\"row g-3 align-items-center\">\n                    <div class=\"col-auto d-block mx-auto\">\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Enter Your Password\"\n                            v-model=\"state.pass\">\n                        <span class=\"text-danger\" v-if=\"v$.pass.$error\">{{ v$.pass.$errors[0].$message }}</span>\n                    </div>\n                </div>\n                <br />\n                <div class=\"row g-3 align-items-center\">\n                    <div class=\"col-auto d-block mx-auto\">\n                        <button type=\"submit\" class=\"btn btn-primary\" @click=\"LoginNow()\"> Login Now </button>\n                        &nbsp;\n                        <button type=\"button\" class=\"btn btn-link\" @click=\"redirectTo({ val: 'signup' })\"> SignUp\n                        </button>\n                    </div>\n                </div>\n        </form>\n        <br />\n        <div class=\"row g-3 align-items-center\">\n            {{ UserNotFoundError }}\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { mapActions } from 'vuex';\n// For validate data\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\n// For Composition Api\nimport { reactive, computed } from \"vue\";\nexport default {\n    name: 'Login',\n    setup() {\n        // Data\n        const state = reactive({\n            email: \"\",\n            pass: \"\",\n        });\n        // Validations\n        const rules = computed(() => {\n            return {\n                email: { required, email },\n                pass: { required, minLength: minLength(10) }\n            }\n        });\n        // Write rules first\n        const v$ = useValidate(rules, state);\n        return { state, v$ };\n    },\n    mounted() {\n        let user = localStorage.getItem(\"user_info\");\n        if (user) {\n            // Redirect to Home page\n            this.redirectTo({ val: 'home' });\n        }\n    },\n    data() {\n        return {\n            UserNotFoundError: '',\n        }\n    },\n    methods: {\n        ...mapActions(['redirectTo']),\n        async LoginNow() {\n            this.v$.$validate();\n            if (!this.v$.$error) {\n                console.log('Form Validated Successfully');\n                let result = await axios.get(`http://localhost:3000/users?email=${this.state.email}&password=${this.state.pass}`);\n                console.log(result);\n                if (result.status == 200 && result.data.length > 0) {\n                    // Save user data in local storage\n                    localStorage.setItem(\"user_info\", JSON.stringify(result.data[0]));\n                    // Redirect to Home page\n                    this.redirectTo({ val: 'home' });\n                } else {\n                    this.UserNotFoundError = 'User Not Found';\n                }\n            } else {\n                console.log('Form Validation Failed');\n            }\n        }\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":"AA0CA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,UAAS,QAAS,MAAM;AACjC;AACA,OAAOC,WAAU,MAAO,iBAAiB;AACzC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,SAAQ,QAAS,uBAAuB;AAClE;AACA,SAASC,QAAQ,EAAEC,QAAO,QAAS,KAAK;AACxC,eAAe;EACXC,IAAI,EAAE,OAAO;EACbC,KAAKA,CAAA,EAAG;IACJ;IACA,MAAMC,KAAI,GAAIJ,QAAQ,CAAC;MACnBF,KAAK,EAAE,EAAE;MACTO,IAAI,EAAE;IACV,CAAC,CAAC;IACF;IACA,MAAMC,KAAI,GAAIL,QAAQ,CAAC,MAAM;MACzB,OAAO;QACHH,KAAK,EAAE;UAAED,QAAQ;UAAEC;QAAM,CAAC;QAC1BO,IAAI,EAAE;UAAER,QAAQ;UAAEE,SAAS,EAAEA,SAAS,CAAC,EAAE;QAAE;MAC/C;IACJ,CAAC,CAAC;IACF;IACA,MAAMQ,EAAC,GAAIX,WAAW,CAACU,KAAK,EAAEF,KAAK,CAAC;IACpC,OAAO;MAAEA,KAAK;MAAEG;IAAG,CAAC;EACxB,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C,IAAIF,IAAI,EAAE;MACN;MACA,IAAI,CAACG,UAAU,CAAC;QAAEC,GAAG,EAAE;MAAO,CAAC,CAAC;IACpC;EACJ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,iBAAiB,EAAE;IACvB;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,GAAGrB,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7B,MAAMsB,QAAQA,CAAA,EAAG;MACb,IAAI,CAACV,EAAE,CAACW,SAAS,CAAC,CAAC;MACnB,IAAI,CAAC,IAAI,CAACX,EAAE,CAACY,MAAM,EAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C,IAAIC,MAAK,GAAI,MAAM5B,KAAK,CAAC6B,GAAG,CAAE,qCAAoC,IAAI,CAACnB,KAAK,CAACN,KAAM,aAAY,IAAI,CAACM,KAAK,CAACC,IAAK,EAAC,CAAC;QACjHe,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;QACnB,IAAIA,MAAM,CAACE,MAAK,IAAK,GAAE,IAAKF,MAAM,CAACR,IAAI,CAACW,MAAK,GAAI,CAAC,EAAE;UAChD;UACAf,YAAY,CAACgB,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACN,MAAM,CAACR,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;UACjE;UACA,IAAI,CAACF,UAAU,CAAC;YAAEC,GAAG,EAAE;UAAO,CAAC,CAAC;QACpC,OAAO;UACH,IAAI,CAACE,iBAAgB,GAAI,gBAAgB;QAC7C;MACJ,OAAO;QACHK,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACzC;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}