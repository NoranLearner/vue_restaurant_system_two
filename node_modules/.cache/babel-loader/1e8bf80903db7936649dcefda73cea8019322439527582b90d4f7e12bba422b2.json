{"ast":null,"code":"import Navbar from '@/components/header/Navbar.vue';\n\n// // To Use HTTP Request\n// import axios from \"axios\";\n// // For redirect to links\n// import { mapActions, mapState, mapMutations } from \"vuex\";\n// // For validate data\n// import useValidate from \"@vuelidate/core\";\n// import { required, minLength, maxLength, between } from \"@vuelidate/validators\";\n\nexport default {\n  name: 'AddNewItem',\n  components: {\n    Navbar\n  },\n  // data() {\n  //     return {\n  //         v$: useValidate(),\n  //         userId: \"\",\n  //         userName: \"\",\n  //         locationId: this.$route.params.locationId,\n  //         locName: \"\",\n  //         locAddress: \"\",\n  //         itemName: \"\",\n  //         itemPrice: \"\",\n  //         itemsQty: 1,\n  //         description: \"\",\n  //         pickedCategory: \"\",\n  //         successMessage: \"\",\n  //         errorMessage: \"\",\n  //     }\n  // },\n\n  // validations() {\n  //     return {\n  //         itemName: { required, minLength: minLength(6) },\n  //         itemPrice: { required, between: between(0,1000000) },\n  //         itemsQty: { required, between: between(1,100000) },\n  //         description: { required, minLength: minLength(6), maxLength: maxLength(120) },\n  //         pickedCategory: { required },\n  //     }\n  // },\n\n  computed: {\n    ...mapState([\"isUserLoggedIn\", \"LoggedInUserId\", \"numOfCategories\", \"listOfCategories\"])\n  }\n};","map":{"version":3,"names":["Navbar","name","components","computed","mapState"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/AddNewItem.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <!-- <router-link :to=\"{ name: 'menu', params: { locationId: locationId } }\">\n            <button type=\"button\" class=\"btn btn-secondary float-start\">Back To Menu</button>\n        </router-link> -->\n\n        <!-- <div class=\"clearfix\"></div> -->\n\n        <!-- <div class=\"text-center\">\n            <h1 class=\"mb0\">{{ locName }}</h1>\n            <p class=\"text-muted\">{{ locAddress }}</p>\n        </div> -->\n\n        <!-- <hr /> -->\n\n        <!-- ------------------------------------- -->\n\n        <!-- <form @click.prevent>\n            <h1 class=\"text-center\">Add New Item</h1>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <div class=\"form-floating mb-3\" :class=\"{ 'form-group--error': v$.itemName.$error }\">\n                        <input type=\"text\" class=\"form-control w300\" id=\"floatingItemName\" placeholder=\"Enter Item Name\"\n                            v-model.trim=\"itemName\">\n                        <label for=\"floatingItemName\">Enter Item Name</label>\n                        <span class=\"error-feedback\"\n                            v-if=\"v$.itemName.$error\">{{ v$.itemName.$errors[0].$message }}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <div class=\"form-floating mb-3\" :class=\"{ 'form-group--error': v$.itemPrice.$error }\">\n                        <input type=\"number\" class=\"form-control w300\" id=\"floatingItemPrice\"\n                            placeholder=\"Enter Item Price\" v-model.trim=\"itemPrice\">\n                        <label for=\"floatingItemPrice\">Enter Item Price</label>\n                        <span class=\"error-feedback\" v-if=\"v$.itemPrice.$error\">{{\n            v$.itemPrice.$errors[0].$message }}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <div class=\"form-floating mb-3\" :class=\"{ 'form-group--error': v$.itemsQty.$error }\">\n                        <input type=\"number\" class=\"form-control w300\" id=\"floatingItemQty\"\n                            placeholder=\"Enter Item Quantities\" v-model.trim=\"itemsQty\">\n                        <label for=\"floatingItemQty\">Enter Item Quantities</label>\n                        <span class=\"error-feedback\" v-if=\"v$.itemsQty.$error\">{{\n            v$.itemsQty.$errors[0].$message }}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <div class=\"form-floating mb-3\" :class=\"{ 'form-group--error': v$.description.$error }\">\n                        <textarea class=\"form-control w300 h150\" placeholder=\"Enter Item Description\"\n                            id=\"floatingItemDesc\" v-model.trim=\"description\"></textarea>\n                        <label for=\"floatingItemDesc\">Enter Item Description</label>\n                        <span class=\"error-feedback\" v-if=\"v$.description.$error\">{{\n            v$.description.$errors[0].$message }}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <div class=\"form-floating\" :class=\"{ 'form-group--error': v$.pickedCategory.$error }\">\n                        <select class=\"form-select w300\" id=\"floatingSelectCat\" v-model.trim=\"pickedCategory\">\n                            listOfCategories From mapstate\n                            <option v-for=\"(cat, i) in listOfCategories\" :key=\"i\" :value=\"cat.id\">{{ cat.name }}\n                            </option>\n                        </select>\n                        <label for=\"floatingSelectCat\">Select Category Name</label>\n                        <span class=\"error-feedback\" v-if=\"v$.pickedCategory.$error\">{{\n            v$.pickedCategory.$errors[0].$message }}</span>\n                    </div>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length>0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-danger\" v-if=\"errorMessage.length>0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center mb-3\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <button type=\"button\" @click=\"addNewItem()\" class=\"btn btn-secondary w300\">Add Now</button>\n                </div>\n            </div>\n        </form> -->\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\n// // To Use HTTP Request\n// import axios from \"axios\";\n// // For redirect to links\n// import { mapActions, mapState, mapMutations } from \"vuex\";\n// // For validate data\n// import useValidate from \"@vuelidate/core\";\n// import { required, minLength, maxLength, between } from \"@vuelidate/validators\";\n\nexport default {\n\n    name: 'AddNewItem',\n\n    components: {\n        Navbar,\n    },\n\n    // data() {\n    //     return {\n    //         v$: useValidate(),\n    //         userId: \"\",\n    //         userName: \"\",\n    //         locationId: this.$route.params.locationId,\n    //         locName: \"\",\n    //         locAddress: \"\",\n    //         itemName: \"\",\n    //         itemPrice: \"\",\n    //         itemsQty: 1,\n    //         description: \"\",\n    //         pickedCategory: \"\",\n    //         successMessage: \"\",\n    //         errorMessage: \"\",\n    //     }\n    // },\n\n    // validations() {\n    //     return {\n    //         itemName: { required, minLength: minLength(6) },\n    //         itemPrice: { required, between: between(0,1000000) },\n    //         itemsQty: { required, between: between(1,100000) },\n    //         description: { required, minLength: minLength(6), maxLength: maxLength(120) },\n    //         pickedCategory: { required },\n    //     }\n    // },\n\n    computed: {\n        ...mapState([\n            \"isUserLoggedIn\",\n            \"LoggedInUserId\",\n            \"numOfCategories\",\n            \"listOfCategories\"\n        ]),\n    },\n\n}\n\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":"AAyGA,OAAOA,MAAK,MAAO,gCAAgC;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;EAEXC,IAAI,EAAE,YAAY;EAElBC,UAAU,EAAE;IACRF;EACJ,CAAC;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAG,QAAQ,EAAE;IACN,GAAGC,QAAQ,CAAC,CACR,gBAAgB,EAChB,gBAAgB,EAChB,iBAAiB,EACjB,kBAAiB,CACpB;EACL;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}