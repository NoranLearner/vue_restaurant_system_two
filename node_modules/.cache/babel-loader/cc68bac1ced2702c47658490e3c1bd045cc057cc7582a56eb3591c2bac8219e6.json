{"ast":null,"code":"import Navbar from '@/components/header/Navbar.vue';\nimport { mapActions } from 'vuex';\n// For Validation\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\nimport axios from \"axios\";\nexport default {\n  name: 'UpdateProfile',\n  mounted() {\n    let user = localStorage.getItem(\"user_info\");\n    if (user) {\n      this.name = JSON.parse(user).name;\n      this.email = JSON.parse(user).email;\n      this.pass = JSON.parse(user).password;\n      this.userId = JSON.parse(user).id;\n    }\n  },\n  data() {\n    return {\n      v$: useValidate(),\n      name: \"\",\n      email: \"\",\n      pass: \"\",\n      userId: \"\"\n    };\n  },\n  validations() {\n    return {\n      name: {\n        required,\n        minLength: minLength(10)\n      },\n      email: {\n        required,\n        email\n      },\n      pass: {\n        required,\n        minLength: minLength(10)\n      }\n    };\n  },\n  components: {\n    Navbar\n  },\n  methods: {\n    ...mapActions(['redirectTo']),\n    async UpdateProfileNow() {\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        console.log('Form Validated Successfully');\n        // Update Data\n        let result = await axios.put(`http://localhost:3000/users/${this.userId}`, {\n          name: this.name,\n          email: this.email,\n          password: this.pass\n        });\n        if (result.status == 200) {\n          console.log('Profile Updated Successfully');\n          // Save user data in local storage\n          localStorage.setItem(\"user_info\", JSON.stringify(result.data));\n        } else {}\n      } else {\n        console.log('Form Validation Failed');\n      }\n    }\n  }\n};","map":{"version":3,"names":["Navbar","mapActions","useValidate","required","email","minLength","axios","name","mounted","user","localStorage","getItem","JSON","parse","pass","password","userId","id","data","v$","validations","components","methods","UpdateProfileNow","$validate","$error","console","log","result","put","status","setItem","stringify"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/profile/UpdateProfile.vue"],"sourcesContent":["<template>\n    <Navbar />\n    <div class=\"container\">\n        <form @click.prevent>\n            <div class=\"row g-3 align-items-center\">\n                <h1 class=\"text-center pt-2\">Update Profile</h1>\n                <div class=\"col-auto d-block mx-auto\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Name\" v-model=\"name\">\n                    <span class=\"error-feedback\" v-if=\"v$.name.$error\">{{ v$.name.$errors[0].$message }}</span>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <input type=\"email\" class=\"form-control\" placeholder=\"Enter Your Email\" v-model=\"email\">\n                    <span class=\"error-feedback\" v-if=\"v$.email.$error\">{{ v$.email.$errors[0].$message }}</span>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <input type=\"password\" class=\"form-control\" placeholder=\"Enter Your Password\" v-model=\"pass\">\n                    <span class=\"error-feedback\" v-if=\"v$.pass.$error\">{{ v$.pass.$errors[0].$message }}</span>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <button type=\"submit\" class=\"btn btn-primary\" @click=\"UpdateProfileNow()\"> Update Profile Now </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\nimport Navbar from '@/components/header/Navbar.vue';\nimport { mapActions } from 'vuex';\n// For Validation\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\nimport axios from \"axios\";\nexport default {\n    name:'UpdateProfile',\n    mounted() {\n        let user = localStorage.getItem(\"user_info\");\n        if (user) {\n            this.name = JSON.parse(user).name;\n            this.email = JSON.parse(user).email;\n            this.pass = JSON.parse(user).password;\n            this.userId = JSON.parse(user).id;\n        }\n    },\n    data() {\n        return {\n            v$: useValidate(),\n            name: \"\",\n            email: \"\",\n            pass: \"\",\n            userId: \"\",\n        }\n    },\n    validations() {\n        return {\n            name: {required, minLength: minLength(10)},\n            email: {required, email},\n            pass: { required, minLength: minLength(10) },\n        }\n    },\n    components: {\n        Navbar,\n    },\n    methods: {\n        ...mapActions(['redirectTo']),\n        async UpdateProfileNow() {\n            this.v$.$validate();\n            if (!this.v$.$error) {\n                console.log('Form Validated Successfully');\n                // Update Data\n                let result = await axios.put(`http://localhost:3000/users/${this.userId}`, {\n                    name : this.name,\n                    email : this.email,\n                    password : this.pass,\n                });\n                if (result.status == 200) {\n                    console.log('Profile Updated Successfully');\n                    // Save user data in local storage\n                    localStorage.setItem(\"user_info\", JSON.stringify(result.data));\n                } else {\n                    \n                }\n\n            } else {\n                console.log('Form Validation Failed');\n            }\n        }\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.error-feedback {\n    color: red;\n    font-size: 0.85em;\n}\n</style>"],"mappings":"AAoCA,OAAOA,MAAK,MAAO,gCAAgC;AACnD,SAASC,UAAS,QAAS,MAAM;AACjC;AACA,OAAOC,WAAU,MAAO,iBAAiB;AACzC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,SAAQ,QAAS,uBAAuB;AAClE,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,IAAI,EAAC,eAAe;EACpBC,OAAOA,CAAA,EAAG;IACN,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C,IAAIF,IAAI,EAAE;MACN,IAAI,CAACF,IAAG,GAAIK,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAACF,IAAI;MACjC,IAAI,CAACH,KAAI,GAAIQ,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAACL,KAAK;MACnC,IAAI,CAACU,IAAG,GAAIF,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAACM,QAAQ;MACrC,IAAI,CAACC,MAAK,GAAIJ,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAACQ,EAAE;IACrC;EACJ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,EAAE,EAAEjB,WAAW,CAAC,CAAC;MACjBK,IAAI,EAAE,EAAE;MACRH,KAAK,EAAE,EAAE;MACTU,IAAI,EAAE,EAAE;MACRE,MAAM,EAAE;IACZ;EACJ,CAAC;EACDI,WAAWA,CAAA,EAAG;IACV,OAAO;MACHb,IAAI,EAAE;QAACJ,QAAQ;QAAEE,SAAS,EAAEA,SAAS,CAAC,EAAE;MAAC,CAAC;MAC1CD,KAAK,EAAE;QAACD,QAAQ;QAAEC;MAAK,CAAC;MACxBU,IAAI,EAAE;QAAEX,QAAQ;QAAEE,SAAS,EAAEA,SAAS,CAAC,EAAE;MAAE;IAC/C;EACJ,CAAC;EACDgB,UAAU,EAAE;IACRrB;EACJ,CAAC;EACDsB,OAAO,EAAE;IACL,GAAGrB,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7B,MAAMsB,gBAAgBA,CAAA,EAAG;MACrB,IAAI,CAACJ,EAAE,CAACK,SAAS,CAAC,CAAC;MACnB,IAAI,CAAC,IAAI,CAACL,EAAE,CAACM,MAAM,EAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C;QACA,IAAIC,MAAK,GAAI,MAAMtB,KAAK,CAACuB,GAAG,CAAE,+BAA8B,IAAI,CAACb,MAAO,EAAC,EAAE;UACvET,IAAG,EAAI,IAAI,CAACA,IAAI;UAChBH,KAAI,EAAI,IAAI,CAACA,KAAK;UAClBW,QAAO,EAAI,IAAI,CAACD;QACpB,CAAC,CAAC;QACF,IAAIc,MAAM,CAACE,MAAK,IAAK,GAAG,EAAE;UACtBJ,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;UAC3C;UACAjB,YAAY,CAACqB,OAAO,CAAC,WAAW,EAAEnB,IAAI,CAACoB,SAAS,CAACJ,MAAM,CAACV,IAAI,CAAC,CAAC;QAClE,OAAO,CAEP;MAEJ,OAAO;QACHQ,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACzC;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}