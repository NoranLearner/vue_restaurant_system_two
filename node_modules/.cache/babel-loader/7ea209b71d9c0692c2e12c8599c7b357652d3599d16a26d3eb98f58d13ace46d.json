{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createCommentVNode(\" ------------------------- \"), _createCommentVNode(\" <form @click.prevent>\\n\\n            <div class=\\\"row g-3 align-items-center\\\">\\n                <div class=\\\"col-auto d-block mx-auto text-center\\\">\\n                    <h1>Delete All Categories</h1>\\n                    <hr>\\n                    <p class=\\\"text-danger\\\">\\n                        Are you sure you want to delete all categories for this location?\\n                    </p>\\n                    <div class=\\\"text-center\\\">\\n                        <h1 class=\\\"mb\\\">{{ locName }}</h1>\\n                        <p class=\\\"text-muted\\\">{{ locAddress }}</p>\\n                    </div>\\n                    <p class=\\\"text-danger\\\">\\n                        When deleting all categories, Their related menu items will be deleted as well ....\\n                    </p>\\n                    <hr>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row g-3 align-items-center\\\">\\n                <div class=\\\"col-auto d-block mx-auto\\\">\\n                    <button class=\\\"btn btn-info text-white\\\" @click=\\\"goBack()\\\">Go Back</button>\\n                    &nbsp;&nbsp;&nbsp;\\n                    <button class=\\\"btn btn-danger text-white\\\" @click=\\\"deleteAllCategories()\\\">Delete All Now</button>\\n                </div>\\n            </div>\\n\\n            <br />\\n\\n            <div class=\\\"row g-3 align-items-center\\\">\\n                <div class=\\\"col-auto d-block mx-auto alert alert-success\\\" v-if=\\\"successMessage.length > 0\\\">\\n                    {{ successMessage }}\\n                </div>\\n                <div class=\\\"col-auto d-block mx-auto alert alert-warning\\\" v-if=\\\"errorMessage.length > 0\\\">\\n                    {{ errorMessage }}\\n                </div>\\n            </div>\\n\\n        </form> \")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","_createCommentVNode"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/DeleteAllCategories.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <!-- ------------------------- -->\n\n        <!-- <form @click.prevent>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto text-center\">\n                    <h1>Delete All Categories</h1>\n                    <hr>\n                    <p class=\"text-danger\">\n                        Are you sure you want to delete all categories for this location?\n                    </p>\n                    <div class=\"text-center\">\n                        <h1 class=\"mb\">{{ locName }}</h1>\n                        <p class=\"text-muted\">{{ locAddress }}</p>\n                    </div>\n                    <p class=\"text-danger\">\n                        When deleting all categories, Their related menu items will be deleted as well ....\n                    </p>\n                    <hr>\n                </div>\n            </div>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <button class=\"btn btn-info text-white\" @click=\"goBack()\">Go Back</button>\n                    &nbsp;&nbsp;&nbsp;\n                    <button class=\"btn btn-danger text-white\" @click=\"deleteAllCategories()\">Delete All Now</button>\n                </div>\n            </div>\n\n            <br />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length > 0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-warning\" v-if=\"errorMessage.length > 0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n\n        </form> -->\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\n// import axios from \"axios\";\n// import { mapActions } from \"vuex\";\n\nexport default {\n\n    name: 'DeleteAllCategories',\n\n    components: {\n        Navbar,\n    },\n\n    /* data() {\n        return {\n            locId: this.$route.params.locationId,\n            userId: '',\n            locName: \"\",\n            locAddress: \"\",\n            allItemsIdIs: [],\n            allCatsIdIs: [],\n            successMessage: '',\n            errorMessage: '',\n        }\n    }, */\n\n    async mounted() {\n        let user = localStorage.getItem('user-info');\n        if (!user) {\n            this.redirectTo({ val: 'sign-up' });\n        } else {\n            \n            this.userId = JSON.parse(user).id;\n\n            this.getLocationInfo(this.userId, this.locId);\n\n            // All Items in This Location (KFC Restaurant)\n            // http://localhost:3000/items?locId=3\n            let result = await axios.get(`http://localhost:3000/items?locId=${this.locId}`);\n            let resultLength = result.data.length;\n            for (var i = 0; i < resultLength; i++) {\n                this.allItemsIdIs.push(result.data[i].id);\n            }\n\n            // All Categories in This Location (KFC Restaurant)\n            // http://localhost:3000/categories?locationId=3\n            // write locId or locationId depend on db.json file (database)\n            let resultCat = await axios.get(`http://localhost:3000/categories?locationId=${this.locId}`);\n            let resultCatLength = resultCat.data.length;\n            for (var i = 0; i < resultCatLength; i++) {\n                this.allCatsIdIs.push(resultCat.data[i].id);\n            }\n\n        }\n    },\n\n}\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;;;uBAAtBC,mBAAA,CA+CM,OA/CNC,UA+CM,GA7CFC,YAAA,CAAUC,iBAAA,GAEVC,mBAAA,+BAAkC,EAElCA,mBAAA,wtDAuCW,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}