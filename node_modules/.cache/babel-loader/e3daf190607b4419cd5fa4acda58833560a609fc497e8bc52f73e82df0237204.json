{"ast":null,"code":"import Navbar from '@/components/header/Navbar.vue';\nimport { mapState, mapActions, mapMutations } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: \"Menu\",\n  data() {\n    return {\n      userId: \"\",\n      userName: \"\",\n      locationId: this.$route.params.locationId,\n      locName: '',\n      locAddress: '',\n      listOfUserCategories: [],\n      listOfUserItems: []\n    };\n  },\n  mounted() {\n    let user = localStorage.getItem(\"user_info\");\n    if (user) {\n      this.userId = JSON.parse(user).id;\n      this.userName = JSON.parse(user).name;\n      this.isLoggedInUser();\n      this.displayAllCategories({\n        userIdIs: this.userId,\n        locationIdIs: this.locationId\n      });\n      this.CanUserAccessThisLocation({\n        userIdIs: this.userId,\n        locationIdIs: this.locationId,\n        redirectToPage: \"home\"\n      });\n      this.getLocationInfo(this.userId, this.locationId);\n      this.getCurrentUserCategories(this.userId, this.locationId);\n      this.getCurrentUserItems(this.userId, this.locationId);\n    } else {\n      // Redirect to Sign Up page\n      this.redirectTo({\n        val: 'signup'\n      });\n    }\n  },\n  components: {\n    Navbar\n  },\n  computed: {\n    ...mapState(['isUserLoggedIn', 'LoggedInUserId', 'numOfCategories', 'listOfCategories'])\n  },\n  methods: {\n    ...mapActions(['redirectTo']),\n    ...mapMutations(['isLoggedInUser', 'displayAllCategories', 'CanUserAccessThisLocation']),\n    async getLocationInfo(userId, locationId) {\n      let result = await axios.get(`http://localhost:3000/locations?id=${this.locationId}&userId=${this.userId}`);\n      let locDetails = [];\n      if (result.status == 200 && result.data.length > 0) {\n        locDetails = result.data;\n        this.locName = locDetails[0].name;\n        this.locAddress = locDetails[0].address;\n      }\n    },\n    async getCurrentUserCategories(userId, locationId) {\n      let result = await axios.get(`http://localhost:3000/categories?userId=${userId}&locationId=${locationId}`);\n      if (result.status == 200) {\n        this.listOfUserCategories = result.data;\n        // console.table(this.listOfUserCategories);\n      }\n    },\n    async getCurrentUserItems(userId, locationId) {\n      let result = await axios.get(`http://localhost:3000/items?userId=${userId}&locationId=${locationId}`);\n      if (result.status == 200) {\n        this.listOfUserItems = result.data;\n        // console.table(this.listOfUserItems);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Navbar","mapState","mapActions","mapMutations","axios","name","data","userId","userName","locationId","$route","params","locName","locAddress","listOfUserCategories","listOfUserItems","mounted","user","localStorage","getItem","JSON","parse","id","isLoggedInUser","displayAllCategories","userIdIs","locationIdIs","CanUserAccessThisLocation","redirectToPage","getLocationInfo","getCurrentUserCategories","getCurrentUserItems","redirectTo","val","components","computed","methods","result","get","locDetails","status","length","address"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/Menu.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <!-- ---------------------------------------- -->\n\n        <div>\n\n            <router-link :to=\"{ name: 'ViewCategories', params: { locationId: locationId } }\">\n                <button type=\"button\" class=\"btn btn-secondary float-start\">View/Add Categories</button>\n            </router-link>\n\n            <router-link :to=\"{ name: 'AddNewItem', params: { locationId: locationId } }\">\n                <button type=\"button\" class=\"btn btn-secondary float-end\" v-if=\"numOfCategories > 0\"> Add New Items\n                </button>\n            </router-link>\n\n        </div>\n\n        <div class=\"clearfix\"></div>\n\n        <!-- ---------------------------------------- -->\n\n        <div class=\"text-center\">\n            <h1>{{ locName }}</h1>\n            <p class=\"text-muted\">{{ locAddress }}</p>\n        </div>\n\n        <!-- ---------------------------------------- -->\n\n        <!-- <div class=\"mb-3\" v-if=\"listOfUserCategories.length>0\">\n            <router-link :to=\"{ name: 'delete-all-items', params: { locId: locationId } }\">\n                <button type=\"button\" class=\"btn btn-danger\">\n                    Delete All Items\n                </button>\n            </router-link>\n        </div> -->\n\n        <!-- ---------------------------------------- -->\n\n        <div class=\"each-category\">\n\n            <div class=\"\" v-for=\"(cat, i) in listOfUserCategories\" :key=\"i\">\n\n                <div class=\"row\">\n\n                    <div class=\"catName col-12\">\n                        <h5 class=\"text-center bg-light p-1\">{{ cat.name }}</h5>\n                    </div>\n\n                    <div class=\"each-item\">\n\n\n\n                    </div>\n\n                    <hr />\n\n                </div>\n\n            </div>\n\n        </div>\n\n        <!-- \n            \n                \n                    \n                    <div :class=\"{ 'col-xs-12 col-sm-4 px-4': cat.id == item.catId }\"\n                         v-show=\"cat.id == item.catId\">\n                        <div :class=\"{ 'each-item': cat.id == item.catId }\" v-if=\"cat.id == item.catId\">\n                            <h6 class=\"item-name\">Item: {{ item.name }}</h6>\n                            <p class=\"item-desc text-muted\">\n                                \"Description: {{ item.description }} \"\n                            </p>\n                            <div>\n                                <span class=\"available-items float-start\">Available Quantity: {{\n                numberWithCommas(item.qty)\n            }}</span>\n                                <span class=\"item-price float-end\">\n                                    Price: {{ numberWithCommas(item.price) }} $\n                                </span>\n                            </div>\n                            <div class=\"clearfix\"></div>\n                            <br />\n                            <div class=\"text-white\">\n                                <router-link :to=\"{\n                name: 'update-item',\n                params: { locationId: locationId, itemId: item.id },\n            }\">\n                                    <button class=\"btn btn-success float-start\">Update</button>\n                                </router-link>\n                                <router-link :to=\"{\n                name: 'delete-item',\n                params: { locationId: locationId, itemId: item.id }\n            }\n                \">\n                                    <button class=\"btn btn-danger float-end\">Delete</button>\n                                </router-link>\n                            </div>\n                            <div class=\"clearfix\"></div>\n                            <br />\n                        </div>\n                    </div>\n                    <hr />\n                </div>\n            </div>\n        -->\n\n        <!-- ---------------------------------------- -->\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\nimport { mapState, mapActions, mapMutations } from 'vuex';\n\nimport axios from 'axios';\n\nexport default {\n\n    name: \"Menu\",\n\n    data() {\n        return {\n            userId: \"\",\n            userName: \"\",\n            locationId: this.$route.params.locationId,\n            locName: '',\n            locAddress: '',\n            listOfUserCategories: [],\n            listOfUserItems: [],\n        }\n    },\n\n    mounted() {\n        let user = localStorage.getItem(\"user_info\");\n        if (user) {\n            this.userId = JSON.parse(user).id;\n            this.userName = JSON.parse(user).name;\n            this.isLoggedInUser();\n            this.displayAllCategories({ userIdIs: this.userId, locationIdIs: this.locationId });\n            this.CanUserAccessThisLocation({ userIdIs: this.userId, locationIdIs: this.locationId, redirectToPage: \"home\" });\n            this.getLocationInfo(this.userId, this.locationId);\n            this.getCurrentUserCategories(this.userId, this.locationId);\n            this.getCurrentUserItems(this.userId, this.locationId);\n        }\n        else {\n            // Redirect to Sign Up page\n            this.redirectTo({ val: 'signup' });\n        }\n    },\n\n    components: {\n        Navbar,\n    },\n\n    computed: {\n        ...mapState(['isUserLoggedIn', 'LoggedInUserId', 'numOfCategories', 'listOfCategories']),\n    },\n\n    methods: {\n        ...mapActions(['redirectTo']),\n        ...mapMutations(['isLoggedInUser', 'displayAllCategories', 'CanUserAccessThisLocation']),\n        async getLocationInfo(userId, locationId) {\n            let result = await axios.get(`http://localhost:3000/locations?id=${this.locationId}&userId=${this.userId}`);\n            let locDetails = [];\n            if (result.status == 200 && result.data.length > 0) {\n                locDetails = result.data;\n                this.locName = locDetails[0].name;\n                this.locAddress = locDetails[0].address;\n            }\n        },\n        async getCurrentUserCategories(userId, locationId) {\n            let result = await axios.get(\n                `http://localhost:3000/categories?userId=${userId}&locationId=${locationId}`\n            );\n            if (result.status == 200) {\n                this.listOfUserCategories = result.data;\n                // console.table(this.listOfUserCategories);\n            }\n        },\n        async getCurrentUserItems(userId, locationId) {\n            let result = await axios.get(\n                `http://localhost:3000/items?userId=${userId}&locationId=${locationId}`\n            );\n            if (result.status == 200) {\n                this.listOfUserItems = result.data;\n                // console.table(this.listOfUserItems);\n            }\n        },\n    },\n\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.catName {\n    color: teal;\n}\n\n// .item-name {\n//     color: darkgoldenrod;\n// }\n// .item-price {\n//     color: firebrick;\n// }</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}