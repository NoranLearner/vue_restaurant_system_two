{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Navbar from '@/components/header/Navbar.vue';\nimport axios from \"axios\";\nimport { mapActions, mapMutations } from \"vuex\";\nexport default {\n  name: 'DeleteCategory',\n  data() {\n    return {\n      locationId: this.$route.params.locationId,\n      catId: this.$route.params.catId,\n      userId: '',\n      name: \"\",\n      // allItemsIdIs: [],\n      successMessage: '',\n      errorMessage: ''\n      // locationData: '',\n    };\n  },\n  components: {\n    Navbar\n  },\n  async mounted() {\n    let user = localStorage.getItem('user-info');\n    if (!user) {\n      // Redirect to Sign Up page\n      this.redirectTo({\n        val: 'signup'\n      });\n    } else {\n      // this.deleteLocation = this.$route.params.locationId;\n      this.userId = JSON.parse(user).id;\n\n      // this.canCurrentUserAccessThisLocation();\n\n      /* this.canUserAccessThisCategory({\n          userIdIs: this.userId,\n          locationIdIs: this.locId,\n          catIdIs: this.catId,\n          redirectToPage: \"home\",\n      }); */\n\n      this.getCategoryName(this.userId, this.locationId, this.catId);\n\n      // category name: Break\n      // http://localhost:3000/items?catId=5\n      /* let result = await axios.get(`http://localhost:3000/items?catId=${this.catId}`);\n      let resultLength = result.data.length;\n      for (var i = 0; i < resultLength; i++) {\n          this.allItemsIdIs.push(result.data[i].id);\n      } */\n    }\n  },\n  methods: {\n    /* ...mapMutations([\n        \"canUserAccessThisCategory\",\n    ]), */\n\n    ...mapActions(['redirectTo']),\n    goBack() {\n      // redirect to view-categories page\n      this.$router.push({\n        name: \"ViewCategories\",\n        params: {\n          locationId: this.locationId\n        }\n      });\n    }\n\n    /* async canCurrentUserAccessThisLocation() {\n        let result = await axios.get(`\n        http://localhost:3000/locations?id=${this.deleteLocation}&userId=${this.userId}\n        `);\n        if (result.status == 200 && result.data.length > 0) {\n            this.locationData = result.data;\n            this.name = this.locationData[0].name;\n            this.phone = this.locationData[0].phone;\n            this.address = this.locationData[0].address;\n        } else {\n            this.redirectTo({ val: 'home' });\n        }\n    }, */\n\n    /* async getCategoryName(userId, locId, catId) {\n        let result = await axios.get(`\n        http://localhost:3000/categories?userId=${userId}&locationId=${locId}&id=${catId}\n        `);\n        if (result.status == 200) {\n            this.categoryNames = result.data;\n            if (this.categoryNames.length > 0) {\n                this.name = this.categoryNames[0].name;\n            }\n        }\n    }, */\n\n    /* async deleteCategory() {\n        let result = await axios.delete(`http://localhost:3000/categories/${this.catId}`);\n        let allResults = [];\n        for (var i = 0; i < this.allItemsIdIs.length; i++){\n            let result = await axios.delete(`http://localhost:3000/items/${this.allItemsIdIs[i]}`);\n            if (result.status == 200) {\n                allResults.push(true);\n            } else {\n                allResults.push(false);\n            }\n        }\n        if (result.status == 200 && !allResults.includes(false)) {\n            this.successMessage = 'Delete Category and Related Items Successfully';\n            this.errorMessage = '';\n            setTimeout(() => {\n                this.$router.push({ name: \"view-categories\", params: { locationId: this.locId } });\n            }, 2000);\n        } else {\n            this.successMessage = '';\n            this.errorMessage = 'Something went wrong, Try again';\n        }\n    }, */\n  }\n};","map":{"version":3,"names":["Navbar","axios","mapActions","mapMutations","name","data","locationId","$route","params","catId","userId","successMessage","errorMessage","components","mounted","user","localStorage","getItem","redirectTo","val","JSON","parse","id","getCategoryName","methods","goBack","$router","push"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/DeleteCategory.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <!-- ---------------------------- -->\n\n        <form @click.prevent>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto text-center\">\n                    <h1>Delete Category #{{ catId }}</h1>\n                    <h4>Category Name: {{ name }}</h4>\n                    <hr>\n                    <p class=\"text-danger\">\n                        Are you sure you want to delete this category ?\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <button class=\"btn btn-info text-white\" @click=\"goBack()\">Go Back</button>\n                    &nbsp;&nbsp;&nbsp;\n                    <!-- <button class=\"btn btn-danger text-white\" @click=\"deleteCategory()\">Delete Now</button> -->\n                </div>\n            </div>\n\n            <br />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length > 0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-warning\" v-if=\"errorMessage.length > 0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n\n        </form>\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\nimport axios from \"axios\";\nimport { mapActions, mapMutations } from \"vuex\";\n\nexport default {\n\n    name: 'DeleteCategory',\n\n    data() {\n        return {\n            locationId: this.$route.params.locationId,\n            catId: this.$route.params.catId,\n            userId: '',\n            name: \"\",\n            // allItemsIdIs: [],\n            successMessage: '',\n            errorMessage: '',\n            // locationData: '',\n        }\n    },\n\n    components: {\n        Navbar,\n    },\n\n    async mounted() {\n\n        let user = localStorage.getItem('user-info');\n\n        if (!user) {\n\n            // Redirect to Sign Up page\n            this.redirectTo({ val: 'signup' });\n\n        } else {\n\n            // this.deleteLocation = this.$route.params.locationId;\n            this.userId = JSON.parse(user).id;\n\n            // this.canCurrentUserAccessThisLocation();\n\n            /* this.canUserAccessThisCategory({\n                userIdIs: this.userId,\n                locationIdIs: this.locId,\n                catIdIs: this.catId,\n                redirectToPage: \"home\",\n            }); */\n\n            this.getCategoryName(this.userId, this.locationId, this.catId);\n\n            // category name: Break\n            // http://localhost:3000/items?catId=5\n            /* let result = await axios.get(`http://localhost:3000/items?catId=${this.catId}`);\n            let resultLength = result.data.length;\n            for (var i = 0; i < resultLength; i++) {\n                this.allItemsIdIs.push(result.data[i].id);\n            } */\n        }\n    },\n\n    methods: {\n\n        /* ...mapMutations([\n            \"canUserAccessThisCategory\",\n        ]), */\n\n        ...mapActions(['redirectTo']),\n\n        goBack() {\n            // redirect to view-categories page\n            this.$router.push({ name: \"ViewCategories\", params: { locationId: this.locationId } });\n        },\n\n        /* async canCurrentUserAccessThisLocation() {\n            let result = await axios.get(`\n            http://localhost:3000/locations?id=${this.deleteLocation}&userId=${this.userId}\n            `);\n            if (result.status == 200 && result.data.length > 0) {\n                this.locationData = result.data;\n                this.name = this.locationData[0].name;\n                this.phone = this.locationData[0].phone;\n                this.address = this.locationData[0].address;\n            } else {\n                this.redirectTo({ val: 'home' });\n            }\n        }, */\n\n        /* async getCategoryName(userId, locId, catId) {\n            let result = await axios.get(`\n            http://localhost:3000/categories?userId=${userId}&locationId=${locId}&id=${catId}\n            `);\n            if (result.status == 200) {\n                this.categoryNames = result.data;\n                if (this.categoryNames.length > 0) {\n                    this.name = this.categoryNames[0].name;\n                }\n            }\n        }, */\n\n        /* async deleteCategory() {\n            let result = await axios.delete(`http://localhost:3000/categories/${this.catId}`);\n            let allResults = [];\n            for (var i = 0; i < this.allItemsIdIs.length; i++){\n                let result = await axios.delete(`http://localhost:3000/items/${this.allItemsIdIs[i]}`);\n                if (result.status == 200) {\n                    allResults.push(true);\n                } else {\n                    allResults.push(false);\n                }\n            }\n            if (result.status == 200 && !allResults.includes(false)) {\n                this.successMessage = 'Delete Category and Related Items Successfully';\n                this.errorMessage = '';\n                setTimeout(() => {\n                    this.$router.push({ name: \"view-categories\", params: { locationId: this.locId } });\n                }, 2000);\n            } else {\n                this.successMessage = '';\n                this.errorMessage = 'Something went wrong, Try again';\n            }\n        }, */\n\n    },\n\n}\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":";AAgDA,OAAOA,MAAK,MAAO,gCAAgC;AAEnD,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,UAAU,EAAEC,YAAW,QAAS,MAAM;AAE/C,eAAe;EAEXC,IAAI,EAAE,gBAAgB;EAEtBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,UAAU;MACzCG,KAAK,EAAE,IAAI,CAACF,MAAM,CAACC,MAAM,CAACC,KAAK;MAC/BC,MAAM,EAAE,EAAE;MACVN,IAAI,EAAE,EAAE;MACR;MACAO,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE;MACd;IACJ;EACJ,CAAC;EAEDC,UAAU,EAAE;IACRb;EACJ,CAAC;EAED,MAAMc,OAAOA,CAAA,EAAG;IAEZ,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE5C,IAAI,CAACF,IAAI,EAAE;MAEP;MACA,IAAI,CAACG,UAAU,CAAC;QAAEC,GAAG,EAAE;MAAS,CAAC,CAAC;IAEtC,OAAO;MAEH;MACA,IAAI,CAACT,MAAK,GAAIU,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,CAACO,EAAE;;MAEjC;;MAEA;;;;;;;MAOA,IAAI,CAACC,eAAe,CAAC,IAAI,CAACb,MAAM,EAAE,IAAI,CAACJ,UAAU,EAAE,IAAI,CAACG,KAAK,CAAC;;MAE9D;MACA;MACA;;;;;IAKJ;EACJ,CAAC;EAEDe,OAAO,EAAE;IAEL;;;;IAIA,GAAGtB,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAE7BuB,MAAMA,CAAA,EAAG;MACL;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEvB,IAAI,EAAE,gBAAgB;QAAEI,MAAM,EAAE;UAAEF,UAAU,EAAE,IAAI,CAACA;QAAW;MAAE,CAAC,CAAC;IAC1F;;IAEA;;;;;;;;;;;;;;IAcA;;;;;;;;;;;;IAYA;;;;;;;;;;;;;;;;;;;;;;EAuBJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}