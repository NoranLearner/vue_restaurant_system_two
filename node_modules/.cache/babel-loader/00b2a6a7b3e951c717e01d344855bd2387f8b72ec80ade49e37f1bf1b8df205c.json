{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  type: \"button\",\n  class: \"btn btn-secondary float-end\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"clearfix\"\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createElementVNode(\"div\", null, [_createVNode(_component_router_link, {\n    to: {}\n  }), _ctx.numOfCategories > 0 ? (_openBlock(), _createElementBlock(\"button\", _hoisted_2, \"Add New Items\")) : _createCommentVNode(\"v-if\", true)]), _hoisted_3, _createCommentVNode(\" <div>\\n            Is User Logged In? {{ isUserLoggedIn }}\\n            <br />\\n            Num Of Categories: {{ numOfCategories }}\\n            <br />\\n            User Id Is: {{ LoggedInUserId }}\\n            <br />\\n            Categories Array: {{ listOfCategories }}\\n        </div> \")]);\n}","map":{"version":3,"names":["class","key","type","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","_component_router_link","to","_ctx","numOfCategories","_hoisted_2","_createCommentVNode","_hoisted_3"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/Menu.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <div>\n\n            <router-link :to=\"{}\">\n\n            </router-link>\n\n            <button type=\"button\" class=\"btn btn-secondary float-end\" v-if=\"numOfCategories > 0\">Add New Items</button>\n\n        </div>\n\n        <div class=\"clearfix\"></div>\n\n        <!-- <div>\n            Is User Logged In? {{ isUserLoggedIn }}\n            <br />\n            Num Of Categories: {{ numOfCategories }}\n            <br />\n            User Id Is: {{ LoggedInUserId }}\n            <br />\n            Categories Array: {{ listOfCategories }}\n        </div> -->\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\nimport { mapState, mapActions, mapMutations } from 'vuex';\n\nexport default {\n\n    name: \"Menu\",\n\n    data() {\n        return {\n            userId: \"\",\n            userName: \"\",\n            locationId: \"\",\n        }\n    },\n\n    mounted() {\n        let user = localStorage.getItem(\"user_info\");\n        if (user) {\n            this.userId = JSON.parse(user).id;\n            this.userName = JSON.parse(user).name;\n            this.isLoggedInUser();\n            this.locationId = this.$route.params.locationId;\n            this.displayAllCategories({ userIdIs: this.userId , locationIdIs: this.locationId });\n        }\n        else {\n            // Redirect to Sign Up page\n            this.redirectTo({ val: 'signup' });\n        }\n    },\n\n    components: {\n        Navbar,\n    },\n\n    computed: {\n        ...mapState(['isUserLoggedIn', 'LoggedInUserId', 'numOfCategories', 'listOfCategories']),\n    },\n\n    methods: {\n        ...mapActions(['redirectTo']),\n        ...mapMutations(['isLoggedInUser', 'displayAllCategories']),\n    },\n\n}\n\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;;EAF1BC,GAAA;EAYoBC,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC;;gCAIhCG,mBAAA,CAA4B;EAAvBH,KAAK,EAAC;AAAU;;;;uBAdzBI,mBAAA,CA0BM,OA1BNC,UA0BM,GAxBFC,YAAA,CAAUC,iBAAA,GAEVJ,mBAAA,CAQM,cANFG,YAAA,CAEcE,sBAAA;IAFAC,EAAE,EAAE;EAAE,IAI4CC,IAAA,CAAAC,eAAe,Q,cAA/EP,mBAAA,CAA2G,UAA3GQ,UAA2G,EAAtB,eAAa,KAZ9GC,mBAAA,e,GAgBQC,UAA4B,EAE5BD,mBAAA,sSAQU,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}