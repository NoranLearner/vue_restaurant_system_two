{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row g-3 align-items-center\"\n};\nconst _hoisted_3 = {\n  class: \"col-auto d-block mx-auto text-center\"\n};\nconst _hoisted_4 = {\n  class: \"text-center\"\n};\nconst _hoisted_5 = {\n  class: \"mb0\"\n};\nconst _hoisted_6 = {\n  class: \"text-muted\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-danger\"\n}, \" Are you sure you want to delete this item ? \", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createElementVNode(\"form\", {\n    onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h1\", _hoisted_5, \" Delete Item #\" + _toDisplayString($data.itemId), 1 /* TEXT */), _createElementVNode(\"h4\", _hoisted_6, \" Item Name \" + _toDisplayString(), 1 /* TEXT */)]), _hoisted_7, _hoisted_8])]), _hoisted_9]), _createCommentVNode(\" \\n\\n            \\n\\n            <div class=\\\"row g-3 align-items-center\\\">\\n                <div class=\\\"col-auto d-block mx-auto\\\">\\n                    <router-link :to=\\\"{ name: 'menu', params: { locationId: locId } }\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Back To Menu</button>\\n                    </router-link>\\n                    &nbsp;\\n                    <button class=\\\"btn btn-danger text-white\\\" @click=\\\"deleteItem()\\\">Delete Now</button>\\n                </div>\\n            </div>\\n\\n            <br />\\n\\n            <div class=\\\"row g-3 align-items-center\\\">\\n                <div class=\\\"col-auto d-block mx-auto alert alert-success\\\" v-if=\\\"successMessage.length > 0\\\">\\n                    {{ successMessage }}\\n                </div>\\n                <div class=\\\"col-auto d-block mx-auto alert alert-warning\\\" v-if=\\\"errorMessage.length > 0\\\">\\n                    {{ errorMessage }}\\n                </div>\\n            </div>\\n\\n        </form> \")]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","onClick","_cache","_withModifiers","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$data","itemId","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_createCommentVNode"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/DeleteItem.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <form @click.prevent>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto text-center\">\n\n                    <div class=\"text-center\">\n                        <h1 class=\"mb0\"> Delete Item #{{ itemId }} </h1>\n                        <h4 class=\"text-muted\"> Item Name {{ }} </h4>\n                    </div>\n\n                    <hr>\n\n                    <p class=\"text-danger\">\n                        Are you sure you want to delete this item ?\n                    </p>\n\n                </div>\n            </div>\n\n            <br />\n\n        </form>\n\n        <!-- \n\n            \n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <router-link :to=\"{ name: 'menu', params: { locationId: locId } }\">\n                        <button type=\"button\" class=\"btn btn-secondary\">Back To Menu</button>\n                    </router-link>\n                    &nbsp;\n                    <button class=\"btn btn-danger text-white\" @click=\"deleteItem()\">Delete Now</button>\n                </div>\n            </div>\n\n            <br />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length > 0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-warning\" v-if=\"errorMessage.length > 0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n\n        </form> -->\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\nimport { mapActions, mapMutations } from \"vuex\";\n\n// import axios from \"axios\";\n\nexport default {\n\n    name: 'DeleteItem',\n\n    data() {\n        return {\n            locationId: this.$route.params.locationId,\n            itemId: this.$route.params.itemId,\n            userId: '',\n        }\n    },\n\n    components: {\n        Navbar,\n    },\n\n    async mounted() {\n\n        let user = localStorage.getItem(\"user_info\");\n\n        if (user) {\n\n            this.userId = JSON.parse(user).id;\n\n\n        } else {\n\n            // Redirect to Sign Up page\n            this.redirectTo({ val: 'signup' });\n\n        }\n\n    },\n\n    methods: {\n\n        ...mapActions(['redirectTo']),\n\n        async getItemInfo(userId, locId, itemId) {\n            let result = await axios.get(`\n        http://localhost:3000/items?userId=${userId}&locId=${locId}&id=${itemId}\n    `);\n            let itemDetails = result.data[0];\n            if (result.status == 200) {\n                this.itemName = itemDetails.name;\n                this.itemPrice = itemDetails.price;\n                this.itemsQty = itemDetails.qty;\n                this.description = itemDetails.description;\n                this.pickedCategory = itemDetails.catId;\n            }\n        },\n\n    },\n\n    /* data() {\n        return {\n            locationData: '',\n            locName: \"\",\n            locAddress: \"\",\n            itemName: \"\",\n            itemPrice: \"\",\n            itemsQty: 1,\n            description: \"\",\n            pickedCategory: \"\",\n            successMessage: '',\n            errorMessage: '',\n        }\n    }, */\n\n    /* async mounted() {\n\n            this.canCurrentUserAccessThisLocation();\n\n            this.canUserAccessThisItem({\n                userIdIs: this.userId,\n                locationIdIs: this.locId,\n                itemIdIs: this.itemId,\n                redirectToPage: \"home\",\n            });\n\n            this.getItemInfo(this.userId, this.locId, this.itemId);\n\n        }\n    }, */\n\n    /* methods: {\n\n        ...mapMutations([\"canUserAccessThisItem\"]),\n\n        async canCurrentUserAccessThisLocation() {\n            let result = await axios.get(`\n    http://localhost:3000/locations?id=${this.locId}&userId=${this.userId}\n    `);\n            if (result.status == 200 && result.data.length > 0) {\n                this.locationData = result.data;\n                this.locName = this.locationData[0].name;\n                this.locAddress = this.locationData[0].address;\n            } else {\n                this.redirectTo({ val: 'home' });\n            }\n        },\n\n        \n\n        async deleteItem() {\n            let result = await axios.delete(`http://localhost:3000/items/${this.itemId}`);\n\n            if (result.status == 200) {\n                this.successMessage = 'Item is deleted Successfully';\n                this.errorMessage = '';\n                setTimeout(() => {\n                    this.$router.push({ name: \"menu\", params: { locationId: this.locId } });\n                }, 2000);\n            } else {\n                this.successMessage = '';\n                this.errorMessage = 'Something went wrong, Try again';\n            }\n        },\n\n    }, */\n\n}\n\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;;EAMTA,KAAK,EAAC;AAA4B;;EAC9BA,KAAK,EAAC;AAAsC;;EAExCA,KAAK,EAAC;AAAa;;EAChBA,KAAK,EAAC;AAAK;;EACXA,KAAK,EAAC;AAAY;gCAG1BC,mBAAA,CAAI;gCAEJA,mBAAA,CAEI;EAFDD,KAAK,EAAC;AAAa,GAAC,+CAEvB;gCAKRC,mBAAA,CAAM;;;uBAvBdC,mBAAA,CAsDM,OAtDNC,UAsDM,GApDFC,YAAA,CAAUC,iBAAA,GAEVJ,mBAAA,CAqBO;IArBAK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MANpBC,cAAA,CAMc,QAAc;MAEhBP,mBAAA,CAeM,OAfNQ,UAeM,GAdFR,mBAAA,CAaM,OAbNS,UAaM,GAXFT,mBAAA,CAGM,OAHNU,UAGM,GAFFV,mBAAA,CAAgD,MAAhDW,UAAgD,EAAhC,gBAAc,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,MAAM,kBACvCd,mBAAA,CAA6C,MAA7Ce,UAA6C,EAAtB,aAAW,GAAAH,gBAAA,CAAG,CAAD,gB,GAGxCI,UAAI,EAEJC,UAEI,C,KAKZC,UAAM,C,GAIVC,mBAAA,0/BAyBW,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}