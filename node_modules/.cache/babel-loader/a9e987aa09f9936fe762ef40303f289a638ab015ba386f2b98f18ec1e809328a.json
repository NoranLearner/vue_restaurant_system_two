{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-secondary float-start\"\n}, \"View/Add Categories\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  type: \"button\",\n  class: \"btn btn-secondary float-end\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"clearfix\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createElementVNode(\"div\", null, [_hoisted_2, _ctx.numOfCategories > 0 ? (_openBlock(), _createElementBlock(\"button\", _hoisted_3, \"Add New Items\")) : _createCommentVNode(\"v-if\", true)]), _hoisted_4, _createElementVNode(\"div\", null, [_createTextVNode(\" Is User Logged In? \" + _toDisplayString(_ctx.isUserLoggedIn) + \" \", 1 /* TEXT */), _hoisted_5, _createTextVNode(\" Num Of Categories: \" + _toDisplayString(_ctx.numOfCategories) + \" \", 1 /* TEXT */), _hoisted_6, _createTextVNode(\" User Id Is: \" + _toDisplayString(_ctx.LoggedInUserId) + \" \", 1 /* TEXT */), _hoisted_7, _createTextVNode(\" Categories Array: \" + _toDisplayString(_ctx.listOfCategories), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","key","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","_hoisted_2","_ctx","numOfCategories","_hoisted_3","_createCommentVNode","_hoisted_4","_createTextVNode","_toDisplayString","isUserLoggedIn","_hoisted_5","_hoisted_6","LoggedInUserId","_hoisted_7","listOfCategories"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/Menu.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <div>\n\n            <button type=\"button\" class=\"btn btn-secondary float-start\">View/Add Categories</button>\n\n            <button type=\"button\" class=\"btn btn-secondary float-end\" v-if=\"numOfCategories > 0\">Add New Items</button>\n\n        </div>\n\n        <div class=\"clearfix\"></div>\n\n        <div>\n            Is User Logged In? {{ isUserLoggedIn }}\n            <br />\n            Num Of Categories: {{ numOfCategories }}\n            <br />\n            User Id Is: {{ LoggedInUserId }}\n            <br />\n            Categories Array: {{ listOfCategories }}\n        </div>\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\nimport { mapState, mapActions, mapMutations } from 'vuex';\n\nexport default {\n\n    name: \"Menu\",\n\n    data() {\n        return {\n            userId: \"\",\n            userName: \"\",\n        }\n    },\n\n    mounted() {\n        let user = localStorage.getItem(\"user_info\");\n        if (user) {\n            this.userId = JSON.parse(user).id;\n            this.userName = JSON.parse(user).name;\n            this.isLoggedInUser();\n            this.locationId = this.$route.params.locationId;\n            this.displayAllCategories({ userIdIs: this.userId , locationIdIs:  });\n        }\n        else {\n            // Redirect to Sign Up page\n            this.redirectTo({ val: 'signup' });\n        }\n    },\n\n    components: {\n        Navbar,\n    },\n\n    computed: {\n        ...mapState(['isUserLoggedIn', 'LoggedInUserId', 'numOfCategories', 'listOfCategories']),\n    },\n\n    methods: {\n        ...mapActions(['redirectTo']),\n        ...mapMutations(['isLoggedInUser', 'displayAllCategories']),\n    },\n\n}\n\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;gCAMdC,mBAAA,CAAwF;EAAhFC,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC;GAAgC,qBAAmB;;EAR3FG,GAAA;EAUoBD,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC;;gCAIhCC,mBAAA,CAA4B;EAAvBD,KAAK,EAAC;AAAU;gCAIjBC,mBAAA,CAAM;gCAENA,mBAAA,CAAM;gCAENA,mBAAA,CAAM;;;uBApBdG,mBAAA,CAwBM,OAxBNC,UAwBM,GAtBFC,YAAA,CAAUC,iBAAA,GAEVN,mBAAA,CAMM,cAJFO,UAAwF,EAExBC,IAAA,CAAAC,eAAe,Q,cAA/EN,mBAAA,CAA2G,UAA3GO,UAA2G,EAAtB,eAAa,KAV9GC,mBAAA,e,GAcQC,UAA4B,EAE5BZ,mBAAA,CAQM,cAxBda,gBAAA,CAgBa,sBACkB,GAAAC,gBAAA,CAAGN,IAAA,CAAAO,cAAc,IAAG,GACvC,iBAAAC,UAAM,EAlBlBH,gBAAA,CAkBkB,sBACa,GAAAC,gBAAA,CAAGN,IAAA,CAAAC,eAAe,IAAG,GACxC,iBAAAQ,UAAM,EApBlBJ,gBAAA,CAoBkB,eACM,GAAAC,gBAAA,CAAGN,IAAA,CAAAU,cAAc,IAAG,GAChC,iBAAAC,UAAM,EAtBlBN,gBAAA,CAsBkB,qBACY,GAAAC,gBAAA,CAAGN,IAAA,CAAAY,gBAAgB,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}