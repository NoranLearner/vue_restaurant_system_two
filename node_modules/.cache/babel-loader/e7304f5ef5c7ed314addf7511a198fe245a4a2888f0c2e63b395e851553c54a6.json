{"ast":null,"code":"import Navbar from '@/components/header/Navbar.vue';\n\n// import { mapActions, mapMutations } from 'vuex';\n\n// import axios from 'axios';\n\n// // For validate data\n\n// import useValidate from \"@vuelidate/core\";\n\n// import { required, minLength, maxLength } from \"@vuelidate/validators\";\n\nexport default {\n  name: 'UpdateCategory',\n  /* data() {\n      return {\n          userId: '',\n          userName: '',\n          locationId: this.$route.params.locationId,\n          locName: '',\n          locAddress: '',\n          name: \"\",\n          successMessage: \"\",\n          errorMessage: \"\",\n          v$: useValidate(),\n          listOfUserCategories: [],\n      }\n  }, */\n\n  mounted() {\n    let user = localStorage.getItem(\"user_info\");\n    if (user) {\n      this.userId = JSON.parse(user).id;\n      this.userName = JSON.parse(user).name;\n      this.CanUserAccessThisLocation({\n        userIdIs: this.userId,\n        locationIdIs: this.locationId,\n        redirectToPage: \"home\"\n      });\n      this.getLocationInfo(this.userId, this.locationId);\n      this.displayUserCategories(this.userId, this.locationId);\n    } else {\n      // Redirect to Sign Up page\n      this.redirectTo({\n        val: 'signup'\n      });\n    }\n  },\n  components: {\n    Navbar\n  }\n};","map":{"version":3,"names":["Navbar","name","mounted","user","localStorage","getItem","userId","JSON","parse","id","userName","CanUserAccessThisLocation","userIdIs","locationIdIs","locationId","redirectToPage","getLocationInfo","displayUserCategories","redirectTo","val","components"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/UpdateCategory.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <!-- <router-link :to=\"{ name: 'ViewCategories', params: { locationId: locationId } }\">\n            <button type=\"button\" class=\"btn btn-secondary float-start\">Back To Category</button>\n        </router-link> -->\n\n        <!-- <router-link :to=\"{ name: 'Menu', params: { locationId: locationId } }\">\n            <button type=\"button\" class=\"btn btn-light float-end\">Back To Menu</button>\n        </router-link> -->\n\n        <!-- <div class=\"clearfix\"></div> -->\n\n        <!-- <div class=\"text-center\">\n            <h1>{{ locName }}</h1>\n            <p class=\"text-muted\">{{ locAddress }}</p>\n        </div> -->\n\n        <!-- Add New Category Form -->\n\n        <!-- <form @click.prevent>\n\n            <h1 class=\"text-center\">Add New Category</h1>\n\n            <br />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Category Name\" v-model.trim=\"name\">\n                    <span class=\"text-danger\" v-if=\"v$.name.$error\">{{ v$.name.$errors[0].$message }}</span>\n                </div>\n            </div>\n\n            <br />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length > 0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-danger\" v-if=\"errorMessage.length > 0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n\n            <br />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <button type=\"button\" @click=\"addCategory()\" class=\"btn btn-success\">Add Now</button>\n                </div>\n            </div>\n\n        </form> -->\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\n// import { mapActions, mapMutations } from 'vuex';\n\n// import axios from 'axios';\n\n// // For validate data\n\n// import useValidate from \"@vuelidate/core\";\n\n// import { required, minLength, maxLength } from \"@vuelidate/validators\";\n\nexport default {\n\n    name: 'UpdateCategory',\n\n    /* data() {\n        return {\n            userId: '',\n            userName: '',\n            locationId: this.$route.params.locationId,\n            locName: '',\n            locAddress: '',\n            name: \"\",\n            successMessage: \"\",\n            errorMessage: \"\",\n            v$: useValidate(),\n            listOfUserCategories: [],\n        }\n    }, */\n\n    mounted() {\n        let user = localStorage.getItem(\"user_info\");\n        if (user) {\n            this.userId = JSON.parse(user).id;\n            this.userName = JSON.parse(user).name;\n            this.CanUserAccessThisLocation({ userIdIs: this.userId, locationIdIs: this.locationId, redirectToPage: \"home\" });\n            this.getLocationInfo(this.userId, this.locationId);\n            this.displayUserCategories(this.userId, this.locationId);\n        }\n        else {\n            // Redirect to Sign Up page\n            this.redirectTo({ val: 'signup' });\n        }\n    },\n\n    components: {\n        Navbar,\n    },\n\n}\n\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":"AA+DA,OAAOA,MAAK,MAAO,gCAAgC;;AAEnD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,eAAe;EAEXC,IAAI,EAAE,gBAAgB;EAEtB;;;;;;;;;;;;;;;EAeAC,OAAOA,CAAA,EAAG;IACN,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C,IAAIF,IAAI,EAAE;MACN,IAAI,CAACG,MAAK,GAAIC,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,CAACM,EAAE;MACjC,IAAI,CAACC,QAAO,GAAIH,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,CAACF,IAAI;MACrC,IAAI,CAACU,yBAAyB,CAAC;QAAEC,QAAQ,EAAE,IAAI,CAACN,MAAM;QAAEO,YAAY,EAAE,IAAI,CAACC,UAAU;QAAEC,cAAc,EAAE;MAAO,CAAC,CAAC;MAChH,IAAI,CAACC,eAAe,CAAC,IAAI,CAACV,MAAM,EAAE,IAAI,CAACQ,UAAU,CAAC;MAClD,IAAI,CAACG,qBAAqB,CAAC,IAAI,CAACX,MAAM,EAAE,IAAI,CAACQ,UAAU,CAAC;IAC5D,OACK;MACD;MACA,IAAI,CAACI,UAAU,CAAC;QAAEC,GAAG,EAAE;MAAS,CAAC,CAAC;IACtC;EACJ,CAAC;EAEDC,UAAU,EAAE;IACRpB;EACJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}