{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row g-3 align-items-center\"\n};\nconst _hoisted_3 = {\n  class: \"col-auto d-block mx-auto text-center\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"text-danger\"\n}, \" Are you sure you want to delete all items for this location ? \", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"text-center\"\n};\nconst _hoisted_6 = {\n  class: \"mb-0\"\n};\nconst _hoisted_7 = {\n  class: \"text-muted\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-danger\"\n}, \" When deleting this items, You will no longer see them ... \", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createElementVNode(\"form\", {\n    onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h1\", _hoisted_6, _toDisplayString($data.locName), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, _toDisplayString($data.locAddress), 1 /* TEXT */)]), _hoisted_8])]), _hoisted_9]), _createCommentVNode(\" \\n\\n            <div class=\\\"row g-3 align-items-center\\\">\\n                <div class=\\\"col-auto d-block mx-auto\\\">\\n                    <router-link :to=\\\"{ name: 'menu', params: { locationId: locId } }\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Back To Menu</button>\\n                    </router-link>\\n                    &nbsp;\\n                    <button class=\\\"btn btn-danger text-white\\\" @click=\\\"deleteAllItems()\\\">Delete All Now</button>\\n                </div>\\n            </div>\\n\\n            <br />\\n\\n            <div class=\\\"row g-3 align-items-center\\\">\\n                <div class=\\\"col-auto d-block mx-auto alert alert-success\\\" v-if=\\\"successMessage.length > 0\\\">\\n                    {{ successMessage }}\\n                </div>\\n                <div class=\\\"col-auto d-block mx-auto alert alert-warning\\\" v-if=\\\"errorMessage.length > 0\\\">\\n                    {{ errorMessage }}\\n                </div>\\n            </div>\\n\\n        </form> \")]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","onClick","_cache","_withModifiers","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","$data","locName","_hoisted_7","locAddress","_hoisted_8","_hoisted_9","_createCommentVNode"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/DeleteAllItems.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <form @click.prevent>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto text-center\">\n\n                    <h5 class=\"text-danger\">\n                        Are you sure you want to delete all items for this location ?\n                    </h5>\n\n                    <div class=\"text-center\">\n                        <h1 class=\"mb-0\">{{ locName }}</h1>\n                        <p class=\"text-muted\">{{ locAddress }}</p>\n                    </div>\n\n                    <p class=\"text-danger\">\n                        When deleting this items, You will no longer see them ...\n                    </p>\n\n                </div>\n            </div>\n\n            <hr />\n\n        </form>\n\n        <!-- \n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <router-link :to=\"{ name: 'menu', params: { locationId: locId } }\">\n                        <button type=\"button\" class=\"btn btn-secondary\">Back To Menu</button>\n                    </router-link>\n                    &nbsp;\n                    <button class=\"btn btn-danger text-white\" @click=\"deleteAllItems()\">Delete All Now</button>\n                </div>\n            </div>\n\n            <br />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length > 0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-warning\" v-if=\"errorMessage.length > 0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n\n        </form> -->\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\nimport { mapActions, mapMutations } from \"vuex\";\n\nimport axios from \"axios\";\n\n\nexport default {\n\n    name: 'DeleteAllItems',\n\n    data() {\n        return {\n            locationId: this.$route.params.locationId,\n            userId: '',\n            locationData: [],\n            locName: \"\",\n            locAddress: \"\",\n        }\n    },\n\n    async mounted() {\n\n        let user = localStorage.getItem(\"user_info\");\n\n        if (user) {\n\n            this.userId = JSON.parse(user).id;\n\n            this.canCurrentUserAccessThisLocation();\n\n\n        } else {\n\n            // Redirect to Sign Up page\n            this.redirectTo({ val: 'signup' });\n\n        }\n\n    },\n\n    components: {\n        Navbar,\n    },\n\n    methods: {\n\n        ...mapActions(['redirectTo']),\n\n        async canCurrentUserAccessThisLocation() {\n            let result = await axios.get(`http://localhost:3000/locations?id=${this.locationId}&userId=${this.userId}`);\n            if (result.status == 200 && result.data.length > 0) {\n                this.locationData = result.data;\n                this.locName = this.locationData[0].name;\n                this.locAddress = this.locationData[0].address;\n            } else {\n                this.redirectTo({ val: 'home' });\n            }\n        },\n\n    },\n\n    /* data() {\n        return {\n            itemId: this.$route.params.itemId,\n            \n            allItemsIdIs: [],\n            myResult: '',\n            successMessage: '',\n            errorMessage: '',\n        }\n    }, */\n\n    /* async mounted() {\n\n            // http://localhost:3000/items?userId=2&locId=3\n            let result = await axios.get(`http://localhost:3000/items?userId=${this.userId}&locId=${this.locId}`);\n            this.allResults = result.data;\n            let resultLength = this.allResults.length;\n            for (var i = 0; i < resultLength; i++) {\n                this.allItemsIdIs.push(result.data[i].id);\n            }\n            // console.table(this.allItemsIdIs);\n        }\n    }, */\n\n    /* methods: {\n\n        async deleteAllItems() {\n\n            let allResults = [];\n\n            for (var i = 0; i < this.allItemsIdIs.length; i++) {\n                let result = await axios.delete(`http://localhost:3000/items/${this.allItemsIdIs[i]}`);\n                if (result.status == 200) {\n                    allResults.push(true);\n                } else {\n                    allResults.push(false);\n                }\n            }\n\n            if (!allResults.includes(false)) {\n                this.successMessage = 'All Items are deleted Successfully';\n                this.errorMessage = '';\n                setTimeout(() => {\n                    this.$router.push({ name: \"menu\", params: { locationId: this.locId } });\n                }, 2000);\n            } else {\n                this.successMessage = '';\n                this.errorMessage = 'Something went wrong, Try again';\n            }\n\n        },\n\n    }, */\n\n}\n\n</script>\n\n<style lang=\"scss\" scoped></style>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;;EAMTA,KAAK,EAAC;AAA4B;;EAC9BA,KAAK,EAAC;AAAsC;gCAE7CC,mBAAA,CAEK;EAFDD,KAAK,EAAC;AAAa,GAAC,iEAExB;;EAEKA,KAAK,EAAC;AAAa;;EAChBA,KAAK,EAAC;AAAM;;EACbA,KAAK,EAAC;AAAY;gCAGzBC,mBAAA,CAEI;EAFDD,KAAK,EAAC;AAAa,GAAC,6DAEvB;gCAKRC,mBAAA,CAAM;;;uBAzBdC,mBAAA,CAsDM,OAtDNC,UAsDM,GApDFC,YAAA,CAAUC,iBAAA,GAEVJ,mBAAA,CAuBO;IAvBAK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MANpBC,cAAA,CAMc,QAAc;MAEhBP,mBAAA,CAiBM,OAjBNQ,UAiBM,GAhBFR,mBAAA,CAeM,OAfNS,UAeM,GAbFC,UAEK,EAELV,mBAAA,CAGM,OAHNW,UAGM,GAFFX,mBAAA,CAAmC,MAAnCY,UAAmC,EAAAC,gBAAA,CAAfC,KAAA,CAAAC,OAAO,kBAC3Bf,mBAAA,CAA0C,KAA1CgB,UAA0C,EAAAH,gBAAA,CAAjBC,KAAA,CAAAG,UAAU,iB,GAGvCC,UAEI,C,KAKZC,UAAM,C,GAIVC,mBAAA,k/BAuBW,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}