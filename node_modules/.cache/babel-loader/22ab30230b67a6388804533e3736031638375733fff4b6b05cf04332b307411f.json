{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-18813e62\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-secondary float-start\"\n}, \"View/Add Categories\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0,\n  type: \"button\",\n  class: \"btn btn-secondary float-end\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"clearfix\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"text-center\"\n};\nconst _hoisted_6 = {\n  class: \"text-muted\"\n};\nconst _hoisted_7 = {\n  class: \"each-category\"\n};\nconst _hoisted_8 = {\n  class: \"row\"\n};\nconst _hoisted_9 = {\n  class: \"catName col-12\"\n};\nconst _hoisted_10 = {\n  class: \"text-center bg-light p-1\"\n};\nconst _hoisted_11 = {\n  class: \"itemName text-center\"\n};\nconst _hoisted_12 = {\n  class: \"text-muted text-center\"\n};\nconst _hoisted_13 = {\n  class: \"float-start\"\n};\nconst _hoisted_14 = {\n  class: \"itemPrice float-end\"\n};\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"clearfix\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createCommentVNode(\" ---------------------------------------- \"), _createElementVNode(\"div\", null, [_createVNode(_component_router_link, {\n    to: {\n      name: 'ViewCategories',\n      params: {\n        locationId: $data.locationId\n      }\n    }\n  }, {\n    default: _withCtx(() => [_hoisted_2]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"]), _createVNode(_component_router_link, {\n    to: {\n      name: 'AddNewItem',\n      params: {\n        locationId: $data.locationId\n      }\n    }\n  }, {\n    default: _withCtx(() => [_ctx.numOfCategories > 0 ? (_openBlock(), _createElementBlock(\"button\", _hoisted_3, \" Add New Items \")) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"])]), _hoisted_4, _createCommentVNode(\" ---------------------------------------- \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h1\", null, _toDisplayString($data.locName), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString($data.locAddress), 1 /* TEXT */)]), _createCommentVNode(\" ---------------------------------------- \"), _createCommentVNode(\" <div class=\\\"mb-3\\\" v-if=\\\"listOfUserCategories.length>0\\\">\\n            <router-link :to=\\\"{ name: 'delete-all-items', params: { locId: locationId } }\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\">\\n                    Delete All Items\\n                </button>\\n            </router-link>\\n        </div> \"), _createCommentVNode(\" ---------------------------------------- \"), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.listOfUserCategories, (cat, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"\",\n      key: i\n    }, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"h5\", _hoisted_10, _toDisplayString(cat.name), 1 /* TEXT */)]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.listOfUserItems, (item, x) => {\n      return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n        class: \"each-item\",\n        key: x\n      }, [cat.id == item.catId ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass({\n          'col-xs-12 col-sm-4 p-4 m-3 bg-secondary-subtle': cat.id == item.catId\n        })\n      }, [_createElementVNode(\"h6\", _hoisted_11, \"Item: \" + _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_12, \" \\\"Description: \" + _toDisplayString(item.description) + \"\\\" \", 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"span\", _hoisted_13, \"Available Quantity: \" + _toDisplayString(item.qty), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_14, \"Price: $\" + _toDisplayString(item.price), 1 /* TEXT */)]), _hoisted_15], 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true)])), [[_vShow, cat.id == item.catId]]);\n    }), 128 /* KEYED_FRAGMENT */)), _hoisted_16])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" \\n            \\n                    <div >\\n                        <div :class=\\\"{ 'each-item': cat.id == item.catId }\\\" >\\n                            \\n                            \\n                            <div class=\\\"text-white\\\">\\n                                <router-link :to=\\\"{\\n                name: 'update-item',\\n                params: { locationId: locationId, itemId: item.id },\\n            }\\\">\\n                                    <button class=\\\"btn btn-success float-start\\\">Update</button>\\n                                </router-link>\\n                                <router-link :to=\\\"{\\n                name: 'delete-item',\\n                params: { locationId: locationId, itemId: item.id }\\n            }\\n                \\\">\\n                                    <button class=\\\"btn btn-danger float-end\\\">Delete</button>\\n                                </router-link>\\n                            </div>\\n                            <div class=\\\"clearfix\\\"></div>\\n                            <br />\\n                        </div>\\n                    </div>\\n                    <hr />\\n                </div>\\n            </div>\\n        \"), _createCommentVNode(\" ---------------------------------------- \")]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","key","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","_createCommentVNode","_component_router_link","to","name","params","locationId","$data","default","_withCtx","_hoisted_2","_","_ctx","numOfCategories","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","locName","_hoisted_6","locAddress","_hoisted_7","_Fragment","_renderList","listOfUserCategories","cat","i","_hoisted_8","_hoisted_9","_hoisted_10","listOfUserItems","item","x","id","catId","_normalizeClass","_hoisted_11","_hoisted_12","description","_hoisted_13","qty","_hoisted_14","price","_hoisted_15","_hoisted_16"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/menu/Menu.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <!-- ---------------------------------------- -->\n\n        <div>\n\n            <router-link :to=\"{ name: 'ViewCategories', params: { locationId: locationId } }\">\n                <button type=\"button\" class=\"btn btn-secondary float-start\">View/Add Categories</button>\n            </router-link>\n\n            <router-link :to=\"{ name: 'AddNewItem', params: { locationId: locationId } }\">\n                <button type=\"button\" class=\"btn btn-secondary float-end\" v-if=\"numOfCategories > 0\"> Add New Items\n                </button>\n            </router-link>\n\n        </div>\n\n        <div class=\"clearfix\"></div>\n\n        <!-- ---------------------------------------- -->\n\n        <div class=\"text-center\">\n            <h1>{{ locName }}</h1>\n            <p class=\"text-muted\">{{ locAddress }}</p>\n        </div>\n\n        <!-- ---------------------------------------- -->\n\n        <!-- <div class=\"mb-3\" v-if=\"listOfUserCategories.length>0\">\n            <router-link :to=\"{ name: 'delete-all-items', params: { locId: locationId } }\">\n                <button type=\"button\" class=\"btn btn-danger\">\n                    Delete All Items\n                </button>\n            </router-link>\n        </div> -->\n\n        <!-- ---------------------------------------- -->\n\n        <div class=\"each-category\">\n\n            <div class=\"\" v-for=\"(cat, i) in listOfUserCategories\" :key=\"i\">\n\n                <div class=\"row\">\n\n                    <div class=\"catName col-12\">\n                        <h5 class=\"text-center bg-light p-1\">{{ cat.name }}</h5>\n                    </div>\n\n                    <div class=\"each-item\" v-for=\"(item, x) in listOfUserItems\" :key=\"x\" v-show=\"cat.id == item.catId\">\n\n                        <div :class=\"{ 'col-xs-12 col-sm-4 p-4 m-3 bg-secondary-subtle': cat.id == item.catId }\" v-if=\"cat.id == item.catId\">\n\n                            <h6 class=\"itemName text-center\">Item: {{ item.name }}</h6>\n\n                            <p class=\"text-muted text-center\"> \"Description: {{ item.description }}\" </p>\n\n                            <div>\n                                <span class=\"float-start\">Available Quantity: {{item.qty}}</span>\n                                <span class=\"itemPrice float-end\">Price: ${{item.price}} </span>\n                            </div>\n\n                            <div class=\"clearfix\"></div>\n\n\n                        </div>\n\n                    </div>\n\n                    <hr />\n\n                </div>\n\n            </div>\n\n        </div>\n\n        <!-- \n            \n                    <div >\n                        <div :class=\"{ 'each-item': cat.id == item.catId }\" >\n                            \n                            \n                            <div class=\"text-white\">\n                                <router-link :to=\"{\n                name: 'update-item',\n                params: { locationId: locationId, itemId: item.id },\n            }\">\n                                    <button class=\"btn btn-success float-start\">Update</button>\n                                </router-link>\n                                <router-link :to=\"{\n                name: 'delete-item',\n                params: { locationId: locationId, itemId: item.id }\n            }\n                \">\n                                    <button class=\"btn btn-danger float-end\">Delete</button>\n                                </router-link>\n                            </div>\n                            <div class=\"clearfix\"></div>\n                            <br />\n                        </div>\n                    </div>\n                    <hr />\n                </div>\n            </div>\n        -->\n\n        <!-- ---------------------------------------- -->\n\n    </div>\n\n</template>\n\n<script>\n\nimport Navbar from '@/components/header/Navbar.vue';\n\nimport { mapState, mapActions, mapMutations } from 'vuex';\n\nimport axios from 'axios';\n\nexport default {\n\n    name: \"Menu\",\n\n    data() {\n        return {\n            userId: \"\",\n            userName: \"\",\n            locationId: this.$route.params.locationId,\n            locName: '',\n            locAddress: '',\n            listOfUserCategories: [],\n            listOfUserItems: [],\n        }\n    },\n\n    mounted() {\n        let user = localStorage.getItem(\"user_info\");\n        if (user) {\n            this.userId = JSON.parse(user).id;\n            this.userName = JSON.parse(user).name;\n            this.isLoggedInUser();\n            this.displayAllCategories({ userIdIs: this.userId, locationIdIs: this.locationId });\n            this.CanUserAccessThisLocation({ userIdIs: this.userId, locationIdIs: this.locationId, redirectToPage: \"home\" });\n            this.getLocationInfo(this.userId, this.locationId);\n            this.getCurrentUserCategories(this.userId, this.locationId);\n            this.getCurrentUserItems(this.userId, this.locationId);\n        }\n        else {\n            // Redirect to Sign Up page\n            this.redirectTo({ val: 'signup' });\n        }\n    },\n\n    components: {\n        Navbar,\n    },\n\n    computed: {\n        ...mapState(['isUserLoggedIn', 'LoggedInUserId', 'numOfCategories', 'listOfCategories']),\n    },\n\n    methods: {\n        ...mapActions(['redirectTo']),\n        ...mapMutations(['isLoggedInUser', 'displayAllCategories', 'CanUserAccessThisLocation']),\n        async getLocationInfo(userId, locationId) {\n            let result = await axios.get(`http://localhost:3000/locations?id=${this.locationId}&userId=${this.userId}`);\n            let locDetails = [];\n            if (result.status == 200 && result.data.length > 0) {\n                locDetails = result.data;\n                this.locName = locDetails[0].name;\n                this.locAddress = locDetails[0].address;\n            }\n        },\n        async getCurrentUserCategories(userId, locationId) {\n            let result = await axios.get(\n                `http://localhost:3000/categories?userId=${userId}&locationId=${locationId}`\n            );\n            if (result.status == 200) {\n                this.listOfUserCategories = result.data;\n                // console.table(this.listOfUserCategories);\n            }\n        },\n        async getCurrentUserItems(userId, locationId) {\n            let result = await axios.get(\n                `http://localhost:3000/items?userId=${userId}&locationId=${locationId}`\n            );\n            if (result.status == 200) {\n                this.listOfUserItems = result.data;\n                // console.table(this.listOfUserItems);\n            }\n        },\n    },\n\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.catName {\n    color: teal;\n}\n.itemName {\n    color: darkgoldenrod;\n}\n.itemPrice {\n    color: firebrick;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}