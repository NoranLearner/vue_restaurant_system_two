{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from \"vuex\";\n// import router from '@/router/index';\nimport router from \"@/router\";\nimport axios from \"axios\";\nconst state = {\n  isUserLoggedIn: \"\",\n  LoggedInUserId: \"\",\n  numOfCategories: \"\",\n  listOfCategories: [],\n  listOfLocations: [],\n  listOfItems: []\n};\nconst getters = {};\nconst mutations = {\n  redirectTo(state, payload) {\n    router.push({\n      name: payload\n    });\n  },\n  isLoggedInUser(state) {\n    let user = localStorage.getItem(\"user_info\");\n    if (user) {\n      state.isUserLoggedIn = \"true\";\n      state.LoggedInUserId = JSON.parse(user).id;\n    } else {\n      state.isUserLoggedIn = \"false\";\n    }\n  },\n  async displayAllCategories(state, payload) {\n    let result = await axios.get(`http://localhost:3000/categories?userId=${payload.userIdIs}&locationId=${payload.locationIdIs}`);\n    if (result.status == 200) {\n      state.listOfCategories = result.data;\n      state.numOfCategories = state.listOfCategories.length;\n    }\n  },\n  async CanUserAccessThisLocation(state, payload) {\n    let result = await axios.get(`http://localhost:3000/locations?userId=${payload.userIdIs}&id=${payload.locationIdIs}`);\n    if (result.status == 200) {\n      state.listOfLocations = result.data;\n      if (state.listOfLocations.length !== 1) {\n        this.commit(\"redirectTo\", payload.redirectToPage);\n      }\n    }\n  },\n  async canUserAccessThisCategory(state, payload) {\n    let result = await axios.get(`http://localhost:3000/categories?userId=${payload.userIdIs}&locationId=${payload.locationIdIs}&id=${payload.catIdIs}`);\n    if (result.status == 200) {\n      state.listOfCategories = result.data;\n      if (state.listOfCategories.length !== 1) {\n        this.commit(\"redirectTo\", payload.redirectToPage);\n      }\n    }\n  },\n  async canUserAccessThisItem(state, payload) {\n    let result = await axios.get(`http://localhost:3000/items?userId=${payload.userIdIs}&locationId=${payload.locationIdIs}&id=${payload.itemIdIs}`);\n    if (result.status == 200) {\n      state.listOfItems = result.data;\n      if (state.listOfItems.length !== 1) {\n        this.commit(\"redirectTo\", payload.redirectToPage);\n      }\n    }\n  }\n};\nconst actions = {\n  redirectTo({\n    commit\n  }, payload) {\n    commit(\"redirectTo\", payload.val);\n  }\n};\nexport default createStore({\n  state,\n  getters,\n  mutations,\n  actions,\n  modules: {}\n});","map":{"version":3,"names":["createStore","router","axios","state","isUserLoggedIn","LoggedInUserId","numOfCategories","listOfCategories","listOfLocations","listOfItems","getters","mutations","redirectTo","payload","push","name","isLoggedInUser","user","localStorage","getItem","JSON","parse","id","displayAllCategories","result","get","userIdIs","locationIdIs","status","data","length","CanUserAccessThisLocation","commit","redirectToPage","canUserAccessThisCategory","catIdIs","canUserAccessThisItem","itemIdIs","actions","val","modules"],"sources":["/opt/lampp/htdocs/rest-sys-2021/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\n// import router from '@/router/index';\nimport router from \"@/router\";\nimport axios from \"axios\";\n\nconst state = {\n  isUserLoggedIn: \"\",\n  LoggedInUserId: \"\",\n  numOfCategories: \"\",\n  listOfCategories: [],\n  listOfLocations: [],\n  listOfItems: [],\n};\n\nconst getters = {};\n\nconst mutations = {\n  redirectTo(state, payload) {\n    router.push({ name: payload });\n  },\n  isLoggedInUser(state) {\n    let user = localStorage.getItem(\"user_info\");\n    if (user) {\n      state.isUserLoggedIn = \"true\";\n      state.LoggedInUserId = JSON.parse(user).id;\n    } else {\n      state.isUserLoggedIn = \"false\";\n    }\n  },\n  async displayAllCategories(state, payload) {\n    let result = await axios.get(\n      `http://localhost:3000/categories?userId=${payload.userIdIs}&locationId=${payload.locationIdIs}`\n    );\n    if (result.status == 200) {\n      state.listOfCategories = result.data;\n      state.numOfCategories = state.listOfCategories.length;\n    }\n  },\n  async CanUserAccessThisLocation(state, payload) {\n    let result = await axios.get(\n      `http://localhost:3000/locations?userId=${payload.userIdIs}&id=${payload.locationIdIs}`\n    );\n    if (result.status == 200) {\n      state.listOfLocations = result.data;\n      if (state.listOfLocations.length !== 1) {\n        this.commit(\"redirectTo\", payload.redirectToPage);\n      }\n    }\n  },\n  async canUserAccessThisCategory(state, payload) {\n    let result = await axios.get(`http://localhost:3000/categories?userId=${payload.userIdIs}&locationId=${payload.locationIdIs}&id=${payload.catIdIs}`);\n    if (result.status == 200) {\n      state.listOfCategories = result.data;\n      if (state.listOfCategories.length !== 1) {\n        this.commit(\"redirectTo\", payload.redirectToPage);\n      }\n    }\n  },\n  async canUserAccessThisItem(state, payload) {\n    let result = await axios.get(`http://localhost:3000/items?userId=${payload.userIdIs}&locationId=${payload.locationIdIs}&id=${payload.itemIdIs}`);\n    if (result.status == 200) {\n      state.listOfItems = result.data;\n      if (state.listOfItems.length !== 1) {\n        this.commit(\"redirectTo\", payload.redirectToPage);\n      }\n    }\n  },\n};\n\nconst actions = {\n  redirectTo({ commit }, payload) {\n    commit(\"redirectTo\", payload.val);\n  },\n};\n\nexport default createStore({\n  state,\n  getters,\n  mutations,\n  actions,\n  modules: {},\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}